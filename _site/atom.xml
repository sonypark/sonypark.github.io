<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>SONY_DEV</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2019-03-04T00:17:36+09:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name>sonypark</name>
   <email></email>
 </author>

 
 <entry>
   <title>Lv1 - k번째</title>
   <link href="http://localhost:4000/algorithm%20test/2019/03/03/AT-kth-array/"/>
   <updated>2019-03-03T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/03/03/AT-kth-array</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/42748&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;개인적으로 공부한 내용을 정리한 문서이므로 내용 상 오류가 있을 수 있습니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다.&lt;/p&gt;

&lt;p&gt;예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다.&lt;/li&gt;
  &lt;li&gt;1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다.&lt;/li&gt;
  &lt;li&gt;2에서 나온 배열의 3번째 숫자는 5입니다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;array의 길이는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;array의 각 원소는 1 이상 100 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 길이는 1 이상 50 이하입니다.&lt;/li&gt;
  &lt;li&gt;commands의 각 원소는 길이가 3입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;array&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;commands&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[1, 5, 2, 6, 3, 7, 4]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[[2, 5, 3], [4, 4, 1], [1, 7, 3]]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;[5, 6, 3]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Kth_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]])[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;commands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;h4 id=&quot;lambda-함수-출처-w3schoolcom&quot;&gt;lambda 함수 (&lt;a href=&quot;https://www.w3schools.com/python/python_lambda.asp&quot;&gt;출처: w3school.com&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lambda arguments : expression&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;한 줄의 로직만 표현하고 사라지는 함수. - 메모리에 저장되지 않아 메모를 아낄 수 있다.&lt;/li&gt;
  &lt;li&gt;선언과 동시에 호출이 되기 때문에 간단한 로직을 구현할 때 편리하다.&lt;/li&gt;
  &lt;li&gt;append: &lt;code class=&quot;highlighter-rouge&quot;&gt;객체를&lt;/code&gt; 리스트 끝에 추가 (Appends object at the end)
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;map-함수출처-w3schoolcom&quot;&gt;map 함수(&lt;a href=&quot;https://www.w3schools.com/python/ref_func_map.asp&quot;&gt;출처: w3school.com&lt;/a&gt;&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;map(function, iterables)&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;반복 가능한(iterable) 자료형의 각 요소를 함수에 넣어 실행한 결과를 반환한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;myfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myfunc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'apple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'banana'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cherry'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'orange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'lemon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'pineapple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x034244F0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#convert the map into a list, for readability:
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'appleorange'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'bananalemon'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'cherrypineapple'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Lv1 - 직사각형의 꼭지점 찾기</title>
   <link href="http://localhost:4000/algorithm%20test/2019/03/01/AT-rectangle/"/>
   <updated>2019-03-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/03/01/AT-rectangle</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: 코드스쿼드 마스터코스 온라인코딩 데모 테스트&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;직사각형을 만드는 데 필요한 4개의 점 중 3개의 좌표가 주어질 때, 나머지 한 점의 좌표를 구하려고 합니다. 직사각형을 이루는 좌표를 담은 배열 v와 배열 v의 길이 v_len이 매개변수로 주어질 때, 직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 return 하도록 solution 함수를 완성해주세요. 단, 직사각형의 각 변은 x축, y축에 평행하며, 반드시 직사각형을 만들 수 있는 경우만 입력으로 주어집니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;v는 세 점의 좌표가 들어있는 2차원 배열입니다.&lt;/li&gt;
  &lt;li&gt;v의 각 원소는 점의 좌표를 나타내며, 좌표는 [x축 좌표, y축 좌표] 순으로 주어집니다.&lt;/li&gt;
  &lt;li&gt;좌표값은 1 이상 10억 이하의 자연수입니다.&lt;/li&gt;
  &lt;li&gt;v_len은 항상 3입니다.&lt;/li&gt;
  &lt;li&gt;직사각형을 만드는 데 필요한 나머지 한 점의 좌표를 [x축 좌표, y축 좌표] 순으로 담아 return 해주세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;v&lt;/th&gt;
      &lt;th&gt;v_len&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[[1, 4], [3, 4], [3, 10]]&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;[1,10]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[[1, 1], [2, 2], [1, 2]]&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;[2,1]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fourth_point_of_rectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 찾고자 하는 4번째 꼭지점 좌표
&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;counter_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;counter_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_y&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rectangle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;zip_v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# by using `*v` apply all tuples in `v` as separate arguments to the zip() function
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zip_v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;h4 id=&quot;append-vs-extend-출처-stack-overflow&quot;&gt;append vs extend (&lt;a href=&quot;https://stackoverflow.com/questions/252703/difference-between-append-vs-extend-list-methods-in-python&quot;&gt;출처: stack overflow&lt;/a&gt;)&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;append: &lt;code class=&quot;highlighter-rouge&quot;&gt;객체를&lt;/code&gt; 리스트 끝에 추가 (Appends object at the end)&lt;/li&gt;
  &lt;li&gt;extend: 이터러블 &lt;code class=&quot;highlighter-rouge&quot;&gt;객체에 담긴 요소를&lt;/code&gt; 리스트 끝에 추가 Extends list by appending elements from the iterable
```python
x = [1, 2, 3]
x.append([4, 5])&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;print (x)
=&amp;gt; [1, 2, 3, [4, 5]]&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;```python
x = [1, 2, 3]
x.extend([4, 5])

print (x)
=&amp;gt;[1, 2, 3, [4, 5]]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;zip&quot;&gt;zip()&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;zip(): 같은 길이의 리스트를 같은 인덱스 요소끼리 잘라 튜플 형태로 반환&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;는 sequence/collection을 언팩(unpack) 하는 기능이 있다.&lt;/li&gt;
  &lt;li&gt;v = [[1, 4], [3, 4], [3, 10]] 일 때 *v 하면 v = [1, 4] [3, 4] [3, 10]&lt;/li&gt;
  &lt;li&gt;zip(*v) =&amp;gt; (1, 3, 3), (4, 4, 10) 형태의 zip 객체 반환&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Lv1 - x만큼 간격이 있는 n개의 숫자</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/28/AT-number-generator/"/>
   <updated>2019-02-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/28/AT-number-generator</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12954&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다.
다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;x는 -10000000 이상, 10000000 이하인 정수입니다.&lt;/li&gt;
  &lt;li&gt;n은 1000 이하인 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;x&lt;/th&gt;
      &lt;th&gt;n&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;[2,4,6,8,10]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;[4,8,12]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-4&lt;/td&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;[-4,-8]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;number_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ll&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;number_generator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 핸드폰 번호 가리기</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/27/AT-hide-numbers/"/>
   <updated>2019-02-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/27/AT-hide-numbers</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12948&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.
전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;s는 길이 4 이상, 20이하인 문자열입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;phone_number&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“01033334444”&lt;/td&gt;
      &lt;td&gt;“&lt;strong&gt;**&lt;/strong&gt;*4444”&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;“027778888”&lt;/td&gt;
      &lt;td&gt;“*****8888”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide_numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phone_number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'*'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phone_number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hide_numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;*&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 문자열 내림차순 배</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/24/AT-sort-alphabet-reverse/"/>
   <updated>2019-02-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/24/AT-sort-alphabet-reverse</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12917&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;문자열 s에 나타나는 문자를 큰것부터 작은 순으로 정렬해 새로운 문자열을 리턴하는 함수, solution을 완성해주세요.
s는 영문 대소문자로만 구성되어 있으며, 대문자는 소문자보다 작은 것으로 간주합니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;str은 길이 1 이상인 문자열입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;s&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;“Zbcdefg”&lt;/td&gt;
      &lt;td&gt;“gfedcbZ”&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sort_alphabet_reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# join 함수 이용
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 리스트로 변환 후 sort
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#return lst
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;join() 함수 : 문자열(string)에 element를 추가할 수 있다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str +=&lt;/code&gt; element. &lt;code class=&quot;highlighter-rouge&quot;&gt;str.join&lt;/code&gt;(element) 모두 같은 결과 반환&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 나누어 떨어지는 숫자 배열</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/23/AT-divisor-array/"/>
   <updated>2019-02-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/23/AT-divisor-array</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12910&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.
divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;arr은 자연수를 담은 배열입니다.&lt;/li&gt;
  &lt;li&gt;정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.&lt;/li&gt;
  &lt;li&gt;divisor는 자연수입니다.&lt;/li&gt;
  &lt;li&gt;array는 길이 1 이상인 배열입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;arr&lt;/th&gt;
      &lt;th&gt;divisor&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[5,9,7,10]&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;[5,10]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[2,36,1,3]&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;[1,2,3,36]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[3,2,6]&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;[-1]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;divisor_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divisor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;divisor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;#오름차순 정렬
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_arr&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;sort() 함수 : 배열을 오름차순 정렬해준다. (내림차순은 reverse())&lt;/li&gt;
  &lt;li&gt;마크다운에서 Table 만드는 법을 배웠다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 문자열 내 p와 y의 개수</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/22/AT-numPY/"/>
   <updated>2019-02-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/22/AT-numPY</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12916&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;대문자와 소문자가 섞여있는 문자열 s가 주어집니다.
s에 ‘p’의 개수와 ‘y’의 개수를 비교해 같으면 True, 다르면 False를 return 하는 solution를 완성하세요.
‘p’, ‘y’ 모두 하나도 없는 경우는 항상 True를 리턴합니다. 단, 개수를 비교할 때 대문자와 소문자는 구별하지 않습니다.&lt;/p&gt;

&lt;p&gt;예를들어 s가 pPoooyY면 true를 return하고 Pyy라면 false를 return합니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;문자열 s의 길이 : 50 이하의 자연수&lt;/li&gt;
  &lt;li&gt;문자열 s는 알파벳으로만 이루어져 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;“pPoooyY”  =&amp;gt; true&lt;/li&gt;
  &lt;li&gt;“Pyy”      =&amp;gt; false&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check_p_y_in_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;STR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;STR_dic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;STR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STR_dic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;P&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STR_dic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Y&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;s&quot;&gt;'''
    if(p == y):
        return True
    else:
        return False
    '''&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# simplify
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;numPY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 함수를 완성하세요
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'p'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;count() 함수&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;if else 쓰지 않고 더 단순하게 리턴하는 방법에 익숙해지자.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 숫자로만 이루어진 문자열 판별</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/21/AT-alpha-string-46/"/>
   <updated>2019-02-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/21/AT-alpha-string-46</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12918&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;문자열 s의 길이가 4혹은 6이고, 숫자로만 구성되있는지 확인해주는 함수, solution을 완성하세요.
예를 들어 s가 a234이면 False를 리턴하고 1234라면 True를 리턴하면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;s는 길이 1 이상, 길이 8 이하인 문자열입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;“a234”  =&amp;gt; False&lt;/li&gt;
  &lt;li&gt;“1234”  =&amp;gt; True&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alpha_string_46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;alpha_string46&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdigit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Python String isdigit() Method&lt;/li&gt;
  &lt;li&gt;isdigit(): 모든 문자가 숫자인지 알려준다. 맞다면 True 아니면 False 리턴&lt;/li&gt;
  &lt;li&gt;Syntax: string.isdigit()&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;리스트 슬라이싱을 잘 익혀두자&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 리스트 내 연속하지 않는 수</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/20/AT-no_continuous/"/>
   <updated>2019-02-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/20/AT-no_continuous</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12906&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다. 
이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다. 
배열 arr에서 제거 되고 남은 수들을 return 하는 solution 함수를 완성해 주세요. 
단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다.&lt;/p&gt;

&lt;p&gt;예를들면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다.&lt;/li&gt;
  &lt;li&gt;arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다.
배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;배열 arr의 크기 : 1,000,000 이하의 자연수&lt;/li&gt;
  &lt;li&gt;배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;[1,1,3,3,0,1,1]  =&amp;gt; [1,3,0,1]&lt;/li&gt;
  &lt;li&gt;[4,4,4,3,3]      =&amp;gt; [4,3]&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;no_continuous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# last_val_inArray
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;no_continuous&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;continue&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;리스트를 슬라이싱 하면 리스트를 리턴한다.&lt;/li&gt;
  &lt;li&gt;빈 리스트를 슬라이싱해도 에러가 나지 않는다.&lt;/li&gt;
  &lt;li&gt;a = [] 처럼 리스트가 비어있을 때&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;a[-1]&lt;/code&gt; 하면 들어있는 element가 없기에 에러가 나지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;a[-1:]&lt;/code&gt; 하면 빈 리스트[]를 반환한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;리스트 슬라이싱을 잘 익혀두자&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190218-190223</title>
   <link href="http://localhost:4000/til/2019/02/19/TIL/"/>
   <updated>2019-02-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/19/TIL</id>
   <content type="html">&lt;h2 id=&quot;190218&quot;&gt;190218&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12901&quot;&gt;프로그래머 Lv1_특정 날짜의 요일 구하기&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://opentutorials.org/course/3085&quot;&gt;생활코팅 Javascript&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190219&quot;&gt;190219&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-1&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    - &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12912&quot;&gt;프로그래머 Lv1_두 정수 사이의 합&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://opentutorials.org/course/3085&quot;&gt;생활코팅 Javascript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;좋은 코드의 핵심은 중복을 제거하는 것이다.&lt;/li&gt;
  &lt;li&gt;함수 -&amp;gt; 객체 -&amp;gt; 파일 순으로 중복을 제거할 수 있다.&lt;/li&gt;
  &lt;li&gt;중복 제거의 효과
    &lt;ul&gt;
      &lt;li&gt;가독성 증가&lt;/li&gt;
      &lt;li&gt;유지 보수가 쉬움&lt;/li&gt;
      &lt;li&gt;성능이 올라감(ex. 파이썬의 경우 똑같은 연산도 함수를 만들어 할 때 더 빠르다.)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부: 트리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190220&quot;&gt;190220&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-2&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    - &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12918&quot;&gt;프로그래머 Lv1_문자열 다루기 기본&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.inflearn.com/course/javascript-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-codesquad-masters_lv1/&quot;&gt;코드스쿼드 Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점-1&quot;&gt;느낀점&lt;/h1&gt;

&lt;h1 id=&quot;내일-할-일-1&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부: 트리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190221&quot;&gt;190221&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-3&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    - &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12916&quot;&gt;프로그래머 Lv1_문자열 내 p,y의 개수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.inflearn.com/course/javascript-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-codesquad-masters_lv1/&quot;&gt;코드스쿼드 Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;배운점&quot;&gt;배운점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;마크다운으로 테이블 작성&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;arr | divisor | return
--- | ------- | ------
[5,9,7,10] | 5 | [5,10]
[2,36,1,3] | 1 | [1,2,3,36]
[3,2,6]    | 10 | [-1]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;위와 같이 작성하면 아래와 같이 보인다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;arr&lt;/th&gt;
      &lt;th&gt;divisor&lt;/th&gt;
      &lt;th&gt;return&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;[5,9,7,10]&lt;/td&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;[5,10]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[2,36,1,3]&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;[1,2,3,36]&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;[3,2,6]&lt;/td&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;[-1]&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;내일-할-일-2&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부: 트리&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190222&quot;&gt;190222&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-4&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    - &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12910&quot;&gt;프로그래머 Lv1_나누어 떨어지는 숫자 배열&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.inflearn.com/course/javascript-%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-codesquad-masters_lv1/&quot;&gt;코드스쿼드 Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Javascript로 구구단 연산 구현&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일-3&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;출국: 갑작스레 싱가포르에 갈 기회가 생겼다. 짧지만 의미있는 시간을 보내고 와야겠다.&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190223&quot;&gt;190223&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-5&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    - &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12917&quot;&gt;프로그래머 Lv1_문자열 내림차순 배치&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일-4&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;싱가포르 여행&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 두 정수 사이의 합</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/19/AT-sum_numbers/"/>
   <updated>2019-02-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/19/AT-sum_numbers</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12912&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요. 
예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;n은 길이 10,000이하인 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.&lt;/li&gt;
  &lt;li&gt;a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다.&lt;/li&gt;
  &lt;li&gt;a와 b의 대소관계는 정해져있지 않습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum_numbers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;adder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;불필요한 변수 제거&lt;/li&gt;
  &lt;li&gt;이 코드가 반드시 필요한지, 다른 것을 대체 될 수 있는지 생각하자&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;반드시 필요한 코드만 남기자&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 특정 날짜의 요일 구하기</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/18/AT-get_day_name/"/>
   <updated>2019-02-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/18/AT-get_day_name</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12901&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요? 두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요. 요일의 이름은 일요일부터 토요일까지 각각 &lt;code class=&quot;highlighter-rouge&quot;&gt;SUN,MON,TUE,WED,THU,FRI,SAT&lt;/code&gt;
입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 &lt;code class=&quot;highlighter-rouge&quot;&gt;TUE&lt;/code&gt;를 반환하세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;n은 길이 10,000이하인 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;2016년은 윤년입니다.&lt;/li&gt;
  &lt;li&gt;2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;datetime&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2016&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;upper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getDayName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'FRI'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SAT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SUN'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MON'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'TUE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'WED'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'THU'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;months&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;datetime 모듈의 strftime 함수를 이용하면 특정 날짜를 원하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt;형태로 반환할 수 있다.&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%a&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Weekday, short version&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Wed&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%A&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Weekday, full version&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Wednesday&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%b&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Month name, short version&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;Dec&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%B&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Month name, full version&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;December&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%y&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Year, short version, without century&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;18&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;ex) &lt;code class=&quot;highlighter-rouge&quot;&gt;%Y&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;Year, full version&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;2018&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;모듈을 이용하면 훨씬 빠르고 간단하게 풀 수 있다.&lt;/li&gt;
  &lt;li&gt;하지만 알고리즘 문제의 본래 취지와는 맞지 않을 수 있다. 이미 만들어진 모듈을 이용하는 것 보단 스스로 그 모듈을 만들어보길 원할 것이다.&lt;/li&gt;
  &lt;li&gt;따라서 두 가지 방법 모두 알고 있는 게 좋다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190216-190217</title>
   <link href="http://localhost:4000/til/2019/02/17/TIL/"/>
   <updated>2019-02-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/17/TIL</id>
   <content type="html">&lt;h2 id=&quot;190216&quot;&gt;190216&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;스택과 큐&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;3.4 스택 두 개로 큐 하나 구현하기&lt;/li&gt;
          &lt;li&gt;3.5 스택 정렬: 오름차순 정렬&lt;/li&gt;
          &lt;li&gt;3.6 동물 보호소&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190217&quot;&gt;190217&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-1&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 스터디
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;스택과 큐&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;스택과큐는 지난주 링크드리스트 보다는 하기 수월했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부: 트리&lt;/li&gt;
  &lt;li&gt;생활코딩 Javascript 강의 듣기&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 수박수박수..</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/16/AT-water_melon/"/>
   <updated>2019-02-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/16/AT-water_melon</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12919&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;길이가 n이고, &lt;code class=&quot;highlighter-rouge&quot;&gt;수박수박수박수....&lt;/code&gt;와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 &lt;code class=&quot;highlighter-rouge&quot;&gt;수박수박&lt;/code&gt;을 리턴하고 3이라면 &lt;code class=&quot;highlighter-rouge&quot;&gt;수박수&lt;/code&gt;를 리턴하면 됩니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;n은 길이 10,000이하인 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;n=3 =&amp;gt; ‘수박수’&lt;/li&gt;
  &lt;li&gt;n=4 =&amp;gt; ‘수박수박’&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;water_melon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'수'&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'박'&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;water_melon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'수박'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;같은 문자를 반복하는 문제는 &lt;code class=&quot;highlighter-rouge&quot;&gt;곱하고 슬라이스&lt;/code&gt; 하기&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;문자열, 리스트에서 slice 기능을 잘 활용하자&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>스택(Stack)에 최소값 반환 함수 만들기</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/16/AT-stack-min/"/>
   <updated>2019-02-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/16/AT-stack-min</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;3.2 스택 Min&lt;/li&gt;
  &lt;li&gt;기본적인 push, pop 기능이 구현된 스택에서 최소값을 반환하는 min 함수를 추가하라.&lt;/li&gt;
  &lt;li&gt;단 push, pop, min 연산은 모두 O(1) 시간에 동작해야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre_mins&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 이전의 최소값을 순서대로 모아두는 리스트
&lt;/span&gt;        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre_mins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pre_mins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#3
&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#7
&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#4
&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#4
&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#8
&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#6
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;시간복잡도 O(1)으로 구현하기 위해서 변수를 만들었다.&lt;/li&gt;
  &lt;li&gt;이전의 최소값을 리스트에 순서대로 모아두면 데이터를 추가 삭제할 때마다 최소값을 업데이트 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190214-190215</title>
   <link href="http://localhost:4000/til/2019/02/15/TIL/"/>
   <updated>2019-02-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/15/TIL</id>
   <content type="html">&lt;h2 id=&quot;190214&quot;&gt;190214&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;스택과 큐&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;3.1 배열 한 개로 스택 세 개 구현하기&lt;/li&gt;
          &lt;li&gt;3.2 스택에서 최솟값을 반환하는 min 함수 구현하기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://opentutorials.org/course/3084&quot;&gt;생활코딩 HTML&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;자료구조를 개념적으로 이해하는 것과 코드로 구현하는 것은 다르다. 개념을 이해해도 코드로 구현하지 못하면 아무 소용이 없다. 스택을 코드로 구현하고 이해하는 데 3시간이 걸렸다.&lt;/li&gt;
  &lt;li&gt;코드 구현과 문제를 푸는 건 또 다른 문제다. 문제를 풀기 위해선 문제를 이해하고 이해한 내용을 바탕으로 다시 새롭게 코드를 짜야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;190215&quot;&gt;190215&lt;/h2&gt;

&lt;h1 id=&quot;오늘-한-일-1&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/12919&quot;&gt;프로그래머 Lv1_서울에서 김서방 찾기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;스택과 큐&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;3.5 스택 정렬: 작은 값이 위로 가도록 정렬하기&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://opentutorials.org/course/3086/18333&quot;&gt;생활코딩 CSS&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점-1&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;스택 정렬 문제 하나 푸는데만 하루종일이 걸렸다. 자료구조를 공부할수록 내 자신이 참 작아진다. 그 동안 해왔던 단순 기능 구현과는 전혀 다르다. 그래도 하다보면 늘겠지. 포기하지 말고 꾸준히 하자&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 문제풀이: 스택과 큐&lt;/li&gt;
  &lt;li&gt;생활코딩 Javascript 강의 듣기&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 서울에서 김서방 찾기</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/15/AT-list_index/"/>
   <updated>2019-02-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/15/AT-list_index</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12919&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;String형 배열 seoul의 element중 Kim의 위치 x를 찾아, 김서방은 x에 있다는 String을 반환하는 함수, solution을 완성하세요. seoul에 Kim은 오직 한 번만 나타나며 잘못된 값이 입력되는 경우는 없습니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;seoul은 길이 1 이상, 1000 이하인 배열입니다.&lt;/li&gt;
  &lt;li&gt;seoul의 원소는 길이 1 이상, 20 이하인 문자열입니다.&lt;/li&gt;
  &lt;li&gt;Kim은 반드시 seoul 안에 포함되어 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;입출력-예&quot;&gt;입출력 예&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;seoul = [‘Jane’, ‘Kim’]&lt;/li&gt;
  &lt;li&gt;return = ‘김서방은 1에 있다’&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;내-풀이&quot;&gt;내 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findKiminSeoul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seoul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

   &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seoul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Kim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'김서방은 &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d에 있다'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람의-풀이&quot;&gt;다른 사람의 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;findKiminSeoul2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seoul&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'김서방은 {}에 있다'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Seoul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Kim'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;list 내장 함수: index 함수&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;list에 index 함수가 있는 걸 처음 알았다..^^&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 약수의 합</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/14/AT-sum_divisor/"/>
   <updated>2019-02-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/14/AT-sum_divisor</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12928?language=python3#&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;자연수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;n은 0 이상 3000이하인 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum_divisor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
           &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;더-효율적인-방법&quot;&gt;더 효율적인 방법&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;math&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum_divisor2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# i제곱이 n일 경우는 한 번만 더 해줘야 한다. (ex. 25의 약수: 1, 5 ,25)
&lt;/span&gt;                &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;약수의 특성: n=a*b (단, a &amp;lt;= b)&lt;/li&gt;
  &lt;li&gt;약수 a,b는 쌍으로 존재한다.&lt;/li&gt;
  &lt;li&gt;a,b는 반비례 관계이다.&lt;/li&gt;
  &lt;li&gt;a의 최대값은 a == b 일 때 이다.&lt;/li&gt;
  &lt;li&gt;따라서 약수를 구할 때 a == b 일때 까지만 구하면 된다.(즉, n = a*a 가 되는 시점)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;쉬운 풀이와 효율적인 풀이가 있다. 보통 쉬운 풀이가 먼저 떠올라 그렇게 풀게 된다.&lt;/li&gt;
  &lt;li&gt;풀었다고 그냥 넘어가지 말고 좀 더 효율적인 풀이가 있는지 고민하자.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190213</title>
   <link href="http://localhost:4000/til/2019/02/13/TIL/"/>
   <updated>2019-02-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/13/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 스터디
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;스택과 큐&lt;/strong&gt;&lt;/li&gt;
          &lt;li&gt;스택
            &lt;ul&gt;
              &lt;li&gt;LIFO(Last-In-First_Out)에 따라 자료를 배열한다. – 후입선출&lt;/li&gt;
              &lt;li&gt;push(item): 스택 가장 위에 item 추가&lt;/li&gt;
              &lt;li&gt;pop(): 스택 가장 위에 있는 항목 제거&lt;/li&gt;
              &lt;li&gt;peek(): 스택 가장 위 항목 반환&lt;/li&gt;
              &lt;li&gt;isEmpty(): 스택이 비어있으면 true 반환&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;큐
            &lt;ul&gt;
              &lt;li&gt;FIFO(First-In-First-Out)에 따라 자료를 배열한다. – 선입선출&lt;/li&gt;
              &lt;li&gt;add(item): 큐 끝부분에 item 추가&lt;/li&gt;
              &lt;li&gt;remove(): 큐 첫 번째 항목 제거&lt;/li&gt;
              &lt;li&gt;peek(): 큐 첫 번째 항목 반환&lt;/li&gt;
              &lt;li&gt;isEmpty(): 큐가 비어있으면 true 반환&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://opentutorials.org/course/2708/15395&quot;&gt;생활코딩 git&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;자료구조를 개념적으로 이해하는 것과 코드로 구현하는 것은 다르다. 개념을 이해해도 코드로 구현하지 못하면 아무 소용이 없다. 스택을 코드로 구현하고 이해하는 데 3시간이 걸렸다.&lt;/li&gt;
  &lt;li&gt;코드 구현과 문제를 푸는 건 또 다른 문제다. 문제를 풀기 위해선 문제를 이해하고 이해한 내용을 바탕으로 다시 새롭게 코드를 짜야한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부: 스택과 큐&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 수업&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190210</title>
   <link href="http://localhost:4000/til/2019/02/10/TIL/"/>
   <updated>2019-02-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/10/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 스터디
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;strong&gt;링크드 리스트&lt;/strong&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;이번주 알고리즘 스터디 내용이었던 링크드 리스트(LinkedList)는 너무 어려웠다. 개념은 이해되는 것 같은데 실제 코드로 구현하는게 많이 힘들었다. 8문제 중에 3문제 밖에 풀지 못 했다. 링크드 리스트는 중요한 부분이니 앞으로도 더 공부해야겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
  &lt;li&gt;생활코딩 HTML, CSS강의 듣기&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>패스트캠퍼스_파이썬중급_05</title>
   <link href="http://localhost:4000/python/2019/02/09/py-fastcampus05/"/>
   <updated>2019-02-09T00:00:00+09:00</updated>
   <id>http://localhost:4000/python/2019/02/09/py-fastcampus05</id>
   <content type="html">&lt;noscript&gt;&lt;pre&gt;# 파이썬 속성 탐색

## 객체 속성에 접근하는 방법

* 스페셜 메소드

`__getattribute__`

`__getattr__`

`__setattr__`

`__delattr__`

## `__getattribute__`

속성을 탐색할때

```python
%%writefile d1.py

class A:
    x = 3

    def __getattribute__(self, name):
        print(&amp;quot;속성 탐색&amp;quot;)
        return super().__getattribute__(name) # == object.__getattribute__(self, name) 를 호출하는것과 동일

    
a = A()
print(a)
print(a.x) # __getattribute__ 호출

a.abc = 12
print(a.abc) # __getattribute__ 호출

print(a.__dict__)
```
```python
!python d1.py
```
```python
&amp;lt;__main__.A object at 0x7fca20d4b588&amp;gt;
=&amp;gt; 속성 탐색
=&amp;gt; 3
=&amp;gt; 속성 탐색
=&amp;gt; 12
=&amp;gt; 속성 탐색
=&amp;gt; {&amp;#39;abc&amp;#39;: 12}
```

## `__getattribute__` 활용

특정조건을 만족하지 않으면 속성에 접근할 수 없게  -&amp;gt; 해당 클래스를

```python
%%writefile d2.py


class Private:
    def __getattribute__(self, name, perm=False): # instance.name -&amp;gt; 매개변수self에는 instance가 매개변수name에는 name이 할당
        if not perm:
            raise AttributeError(&amp;quot;속성에 접근할 수 없습니다.&amp;quot;)
        return super().__getattribute__(name)
    
class A(Private):
    pass

a = A()
a.x = 3

# print(a.x) # 에러가 발생


## a.x 접근하기 위해서는 어떻게???????????
# 모든 메소드는 class 
print(type(a).__getattribute__(a, &amp;#39;x&amp;#39;, True))
```
```python
!python d2.py

=&amp;gt; 3
```

## `__getattr__`

속성을 탐색할때 : 가장 늦게 실행되는 로직

값을 찾지 못했을때, 대체값을 리턴하는 일하거나.

에러를 발생시키는 일

```python
%%writefile d3.py


class A:
    def __getattr__(self, name): # __getattribute__로 바꿔서 실행시켜보면, 어떠한값을 요청해도 &amp;#39;기본값&amp;#39;이라는 str 객체를 리턴
        return &amp;#39;기본값&amp;#39;
    
    
a = A()
a.a = &amp;quot;!!!&amp;quot;
print(a.a)

print(a.b)
```
```python
!python d3.py

=&amp;gt; !!!
=&amp;gt; 기본값
```

#### `__getattr__`활용 : 에러설정

```python
%%writefile d4.py

class A:
    def __getattr__(self, name): # __getattribute__로 바꿔서 실행시켜보면, 어떠한값을 요청해도 항상 에러 발생
        # return 
        raise AttributeError(&amp;quot;값이 없습니다.&amp;quot;)

a = A()
a.a = &amp;quot;!!!&amp;quot;
print(a.a)

print(a.b)
```
```python
!python d4.py

=&amp;gt; !!!
=&amp;gt; Traceback (most recent call last):
  File &amp;quot;d4.py&amp;quot;, line 11, in &amp;lt;module&amp;gt;
    print(a.b)
  File &amp;quot;d4.py&amp;quot;, line 5, in __getattr__
    raise AttributeError(&amp;quot;값이 없습니다.&amp;quot;)
AttributeError: 값이 없습니다.
```

```python
%%writefile d5.py

class A:
    def __getattribute__(self, name):
        print(&amp;quot;getattribute&amp;quot;)
        return super().__getattribute__(name)

    def __getattr__(self, name):
        print(&amp;quot;getattr&amp;quot;)

a = A()
a.name = 123

getattr(a, &amp;#39;name&amp;#39;) # 어느 스페셜 메소드가 실행되는지..
getattr(a, &amp;#39;name2&amp;#39;)
```
```python
# -&amp;gt; __getattribute__ 메소드 부터 찾아서 실행됨

!python d5.py

=&amp;gt; getattribute
=&amp;gt; getattribute
=&amp;gt; getattr
```

## `__setattr__`

속성에 값을 부여할때

```python
%%writefile d6.py


class A:
    def __setattr__(self, name, value): # instance.name = value 
        print(&amp;quot;set&amp;quot;)
        self.__dict__[name] = value 
        #super().__setattr__(name, value)  # 이 경우에는 위와 동일함
        
a = A()
a.var = 3 # __setattr__ 실행

print(a.var)
print(a.__dict__)
```

```python
!python d6.py

=&amp;gt; set
=&amp;gt; 3
=&amp;gt; {&amp;#39;var&amp;#39;: 3}
```

## `__delattr__` 속성

속성을 제거할때

```python
%%writefile d10.py

class A:
    def __delattr__(self, name):
        print(&amp;quot;지운다.&amp;quot;)
        super().__delattr__(name)
        #del self.__dict__[name]
        
        
a = A()
a.var = 3
print(a.var) # 3

del a.var # &amp;quot;지운다&amp;quot;

print(a.var) # Error
```

```python
!python d10.py

=&amp;gt; 3
=&amp;gt; 지운다.
=&amp;gt; Traceback (most recent call last):
  File &amp;quot;d10.py&amp;quot;, line 15, in &amp;lt;module&amp;gt;
    print(a.var) # Error
AttributeError: &amp;#39;A&amp;#39; object has no attribute &amp;#39;var&amp;#39;
```

# 위에서 다룬 스페셜 메소드를 이용해서 속성별로 다른 작업을 부여

원 : 반지름을 입력받아서 원 객체 생성

* 반지름은 변경가능
* 지름, 둘레, 넓이 : 수정불가, 반지름에 따라 결정되는 형태

```python
%%writefile d11.py


MUTABLE = [&amp;#39;r&amp;#39;]
IMMTAUBLE = &amp;#39;diameter&amp;#39;, &amp;#39;circumference&amp;#39;, &amp;#39;area&amp;#39;

class Circle:
    pi = 3.1415
    
    def __init__(self, r):
        self.r = r
        
    def diameter(self):
        return self.r * 2
    
    def circumference(self):
        return self.r * self.pi * 2
    
    def area(self):
        return (self.r ** 2 ) * self.pi
    
    def __setattr__(self, name, value):
        # 속성 r은 변경가능, 나머지 속성(함수)는 변경불가능
        if name in IMMTAUBLE: # IMMUTABLE 로 지정한 이름에 해당하는 속성들을 변경하려고할때 에러가 발생하도록
            raise AttributeError(&amp;quot;속성을 변경할 수 없습니다.&amp;quot;)
        return super().__setattr__(name, value)

    def __getattribute__(self, name):
        # 함수인 속성을, 호출하지않고 즉 ()를 붙이지 않고 값을 얻도록
        if name in IMMTAUBLE: # IMMUTABLE즉 함수형태인 속성들일때 True
            #return getattr(self, name)(self) # 무한뤂 에러 발생(재귀)
            #return type(self).__dict__[name](self) # 아래와 동일
            return type(self).__dict__[name].__get__(self, type(self))() 
        return super().__getattribute__(name)

    
c = Circle(10)
print(c.r)
print(c.diameter) 

c.area = 123
```

```python
!python d11.py

=&amp;gt; 10
=&amp;gt; 20
=&amp;gt; Traceback (most recent call last):
  File &amp;quot;d11.py&amp;quot;, line 40, in &amp;lt;module&amp;gt;
    c.area = 123
  File &amp;quot;d11.py&amp;quot;, line 24, in __setattr__
    raise AttributeError(&amp;quot;속성을 변경할 수 없습니다.&amp;quot;)
AttributeError: 속성을 변경할 수 없습니다.
```

#### 문제점

속성 별로 컨트롤 하기에 제약.

무한루프에 빠지기 쉽다.


## 해결책으로 도입된 디스크립터

### descriptor 프로토콜

`__get__`, `__set__`, `__delete__`중 하나가 구현되어있는 클래스

```python
class Descriptor:
    def __init__(self, value):
        self.value = value
        
    def __get__(self, instance, onwer):
        print(&amp;quot;get&amp;quot;)
        return self.value

    def __set__(self, instance, value):
        print(&amp;#39;set&amp;#39;)
        self.value = value

    def __delete__(self, instance):
        print(&amp;quot;delete&amp;quot;)
        del self.value
        
        
class A:
    value = Descriptor(123) # 속성값을 디스크립터 인스턴스에서 관리하도록 지정
```
```python
A.__dict__

=&amp;gt; mappingproxy({&amp;#39;__module__&amp;#39;: &amp;#39;__main__&amp;#39;,
              &amp;#39;value&amp;#39;: &amp;lt;__main__.Descriptor at 0x103c8e470&amp;gt;,
              &amp;#39;__dict__&amp;#39;: &amp;lt;attribute &amp;#39;__dict__&amp;#39; of &amp;#39;A&amp;#39; objects&amp;gt;,
              &amp;#39;__weakref__&amp;#39;: &amp;lt;attribute &amp;#39;__weakref__&amp;#39; of &amp;#39;A&amp;#39; objects&amp;gt;,
              &amp;#39;__doc__&amp;#39;: None})
```

### get

```python
a = A()

type(a).__dict__[&amp;#39;value&amp;#39;].__get__(a, type(a))

=&amp;gt; get
=&amp;gt; 123
```
```python
a.value # 인스턴스에서 value접근할때 : type(a).__dict__[&amp;#39;value&amp;#39;].__get__(a, type(a)) 호출한것과 동일

=&amp;gt; get
=&amp;gt; 123
```
```python
A.value # 클래스에서 value접근할때 : A.__dict__[&amp;#39;value&amp;#39;].__get__(None, A) 호출한것고 동일

=&amp;gt; get
=&amp;gt; 123
```

```python
A.__dict__[&amp;#39;value&amp;#39;].__get__(None, A)

=&amp;gt; get
=&amp;gt; 123
```

## set

```python
a.value = 300
a.value

=&amp;gt; set
=&amp;gt; get
=&amp;gt; 300
```
```python
type(a).__dict__[&amp;#39;value&amp;#39;].__set__(a, 300)

=&amp;gt; set
```
## del

```python
del a.value

=&amp;gt; delete
```
```python
a.value = 1
type(a).__dict__[&amp;#39;value&amp;#39;].__delete__(a)

=&amp;gt; set
=&amp;gt; delete
```

### 실습 :  디스크립터 생성

`__get__`만 존재하는 디스크립터 + `__set__` 메소드, `__init__`

```python
class FistDescriptor:
    def __init__(self, a):
        self.a = a
    
    def __get__(self, instance, owner):
        return self.a
    
    def __set__(self, instance, value):
        self.a = value

class A:
    a = FisrtDescriptor(3)
```
```python
a = A()
a.a

=&amp;gt; 3
```

## 정보 저장위치에 따라 다르게 작동

### 정보를 디스크립터에 저장

```python
class descriptor:
    def __get__(self, instance, owner):
        print(&amp;#39;get&amp;#39;)
        return self.a
        
    def __set__(self, instance, value):
        print(&amp;#39;set&amp;#39;)
        self.a = value
        
class A:
    x = descriptor()
```

```python
a = A()
a.x = 12

=&amp;gt; set
```
```python
a.x

=&amp;gt; get
=&amp;gt; 12
```
```python
b = A()
b.x # b인스턴스의 x 속성에 넣은적 없는 12라는 값이 들어있음

=&amp;gt; get
=&amp;gt; 12

c = A()
c.x # c인스턴스의 x 속성에 넣은적 없는 12라는 값이 들어있음

=&amp;gt; get
=&amp;gt; 12

a.x = 300

=&amp;gt; set

c.x # c인스턴스의 x 속성에 넣은적 없는 300이라는 값이 들어있음

=&amp;gt; get
=&amp;gt; 300
```
```python
c.__dict__
type(c).__dict__

=&amp;gt; 동일한 디스크립터 인스턴스를 사용하는 객체들끼리 정보가 공유됨
```

----

### 인스턴스에 저장

```python
class descriptor:
    def __get__(self, instance, owner):
        print(&amp;#39;get&amp;#39;)
        return instance.value
        
    def __set__(self, instance, value):
        print(&amp;#39;set&amp;#39;)
        instance.value = value
        
class A:
    x = descriptor()
```
```python
a = A()
a.x = 123

=&amp;gt; set
```
```python
b = A()
b.x = 123123

=&amp;gt; set
```
```python
a.x, b.x

=&amp;gt; get
=&amp;gt; get
=&amp;gt; (123, 123123)
```

#### 디스크립터에 로직(함수)을 저장 : 인자를 받지 않는 함수

```python
class descriptor:
    def __init__(self, func):
        self.func = func
    
    def __get__(self, instance, onwer):
        print(&amp;#39;get 함수 실행&amp;#39;)
        return self.func(instance)
        
class A:
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        
    @descriptor # add = descriptor(add)
    def add(self):
        return self.a + self.b + self.c
```

```python
a = A(1, 2, 3)
a.add # __get__호출, __get__ 메소드 안에서 대신 호출하고 결과를 리턴해줌

=&amp;gt; get 함수실행
=&amp;gt; 6
```

#### 디스크립터에 로직(함수)을 저장 : 인자를 받는 함수

```python
from functolls import partial

class descriptor:
    def __init__(self, func):
        self.func = func
    
    def __get__(self, instance, owner):
        print(&amp;#39;get 함수실행&amp;#39;)
        return partial(self.func, instance)
        
class A:
    def __init__(self, a):
        self.a = a

    @descriptor # add = descriptor(add)
    def add(self, b, c):
        return self.a + b + c
```
```python
a = A(10)
a.add(3, 4) # 디스크립터에 함수를 저장하지만, 호출은 외부에서

=&amp;gt; get 함수실행
=&amp;gt; 17
```

```python
class ImmutableAttribute:
    def __init__(self, func):
        self.func = func
        
    def __get__(self, instance, owner):
        return self.func(instance)
    
    def __set__(self, instance, value):
        raise AttributeError(&amp;quot;read only&amp;quot;)
        
    def __delete__(self, instance):
        raise AttributeError(&amp;#39;read only&amp;#39;)
        
        
class Circle:
    pi = 3.1415
    
    def __init__(self, r):
        self.r = r
    
    @ImmutableAttribute
    def diameter(self):
        return self.r * 2

    @ImmutableAttribute    
    def circumference(self):
        return self.r * self.pi * 2
    
    @ImmutableAttribute
    def area(self):
        return (self.r ** 2 ) * self.pi
```
```python
c = Circle(10)
c.r

=&amp;gt; 10

c.area

=&amp;gt; 314.15000000000003

c.area = 12

=&amp;gt; ---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
&amp;lt;ipython-input-245-97004bf3c700&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 c.area = 12

&amp;lt;ipython-input-241-c5f65d768795&amp;gt; in __set__(self, instance, value)
      7 
      8     def __set__(self, instance, value):
----&amp;gt; 9         raise AttributeError(&amp;quot;read only&amp;quot;)
     10 
     11     def __delete__(self, instance):

AttributeError: read only
```&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sonypark/66725901ed262b3b8fbed3dd39ad9aab.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>패스트캠퍼스_파이썬중급_03</title>
   <link href="http://localhost:4000/python/2019/02/08/py-fastcampus03/"/>
   <updated>2019-02-08T00:00:00+09:00</updated>
   <id>http://localhost:4000/python/2019/02/08/py-fastcampus03</id>
   <content type="html">&lt;noscript&gt;&lt;pre&gt;# 변수 name

`name`이란 파이썬에서 객체 인스턴스의 이름

1. 하나의 객체가 여러 이름을 가질 수 있음
2. 이름은 하나의 객체만 가르킬 수 있음
3. 이름을 호출했을때, 객체의 메모리 주소를 참고하여 객체를 호출함

```python
number = 1000
string = &amp;quot;Hello World&amp;quot;
list_ = [1, 2, 3]
```
```python
id(number), id(string), id(list_)

=&amp;gt; (4403225744, 4403379632, 4403376520)
```

### `is`와 `==`의 차이

`is`: id가 같은지를 확인      (메모리 주소 비교)


`==`: `__eq__` 메소드를 호출  (value 비교)

```python
# 타입체크 안좋은 예

a = 1

&amp;quot;정수&amp;quot; if type(a) == int else &amp;quot;오류&amp;quot;
```
```pyhton
=&amp;gt; &amp;#39;정수&amp;#39;
````

```python
class Always(type):
    def __eq__(self, other):
        # self == other
        return True
    
class A(metaclass=Always):
    pass
```
```python
# vscode에서 warning

a = A()

&amp;quot;정수&amp;quot; if type(a) == int else &amp;quot;오류&amp;quot;
```
```pyhton
=&amp;gt; &amp;#39;정수&amp;#39;
```
```python
isinstance(1, int)  # type비교는 isinstance를 사용한다.
```
```python
=&amp;gt; True
```


## 질문1
&amp;gt; - 타입 체크를  `==`로 비교하면 안 되는 이유가 `==`는 value를 비교하는 연산자이기 때문인가요?
&amp;gt; - 그럼에도 불구하고 위의 예시에서 `==`로 타입 비교를 하는데 오류가 나지 않고 &amp;#39;정수&amp;#39;라는 결과값이 나오는 이유가 궁금합니다.


## is 연산자

```python
number1 = 10000
number2 = 10000
```
```python
number1 == number2 # `==`-&amp;gt; value 비교
```
```python
=&amp;gt; True
```
```python
number1 is number2 # `is`-&amp;gt; id 비교
```
```python
=&amp;gt; False
```
```python
id(number1), id(number2)
```
```python
=&amp;gt; (4403227600, 4403226960)
```
```python
n1 = 1
n2 = 1
```
```python
n1 is n2
```
```python
=&amp;gt; True 
# 이때는 왜 `is`로 비교해도 True일까? --&amp;gt; 정수는 [-5,256] 범위에 있는 정수 객체를 internal로 미리 생성해서 가지고 있기 때문이다.
```

### str의 경우

```python
## 띄어쓰기와 느낌표(!) 때문에 id값이 달라진다.
## 변수 name 선언이 가능한 조건을 만족할 경우에는 id값이 같다.
## 즉, 띄어쓰기나 느낌표(특수문자)등을 없애면 id값은 같아진다. (REPL 환경에서)
string1 = &amp;quot;Hello World!&amp;quot;
string2 = &amp;quot;Hello World!&amp;quot;
```
```python
id(string1), id(string2)
```
```python
=&amp;gt; (4403379888, 4404061040)
```

```python
string1 is string2
```
```python
=&amp;gt; False
```

```python
str1 = &amp;quot;asjldfasdfjawhfohasdfhlksdhfkjhzkxbnklfjnkwanahfu&amp;quot;
str2 = &amp;quot;asjldfasdfjawhfohasdfhlksdhfkjhzkxbnklfjnkwanahfu&amp;quot;
```

```python
str1 is str2
```
```python
=&amp;gt; True # 띄어쓰기와 특수문자가 없으므로 변수 조건에 부합한다. 따라서 `id`값이 같다
```
```python
t1 = ()
t2 = ()
```
```python
t1 is t2
```
```python
=&amp;gt; True # 빈 튜플의 `id`값은 같다. Tuple은 immutable
```
```python
l1 = []
l2 = []
```
```python
l1 is l2 
```
```python
=&amp;gt; False # 빈 리스트는 `id`값이 다르다. 리스트는 언제든 바뀔 수 있기 때문(immutable)
```

# 객체의 캐쉬 : internal

## 정수 : 조건 [-5, 256] 범위에 있는 정수들

정수 객체를 미리 생성해서 가지고 있다.

```python
a = 100
b = 100
c = 100
```
```python
d = 100
a is b is c is d
```
```python
=&amp;gt; True
```
## immutable 객체 (  str 해당 없음 ) 

조건 : 비어있는 객체

```python
a = ()
b = ()
c = ()
```
```python
a is b is c
```
```python
=&amp;gt; True
```
```python
a = (1,)
b = (1,)
c = (1,)
a is b is c
```
```python
=&amp;gt; False
```
## 질문2
&amp;gt; - 튜플은 immutable한데 왜 값이 있다고 해서 `is` 연산이 False가 되는건가요?


```python
a = frozenset()
b = frozenset()
c = frozenset()
```
```python
a is b is c
```
```python
=&amp;gt; True
```

## str 객체 cached internal

조건 : 변수 사용가능한 문자들 

```python
a = &amp;quot;_asdfliu____&amp;quot;
b = &amp;quot;_asdfliu____&amp;quot;
c = &amp;quot;_asdfliu____&amp;quot;
```
```python
a is b is c

=&amp;gt; True
```

```python
a = &amp;quot;a!&amp;quot;
b = &amp;quot;b!&amp;quot;
c = &amp;quot;c!&amp;quot;
```
```python
a is b is c
```
```python
=&amp;gt; False
```
```python
a = &amp;quot;a b&amp;quot;
b = &amp;quot;a b&amp;quot;
c = &amp;quot;a b&amp;quot;
a is b is c
```
```python
=&amp;gt; False
```

### str 강제 인터닝


```python
from sys import intern
help(intern)
```
&amp;#39;&amp;#39;&amp;#39;
Help on built-in function intern in module sys:

intern(...)
    intern(string) -&amp;gt; string
    
    ``Intern&amp;#39;&amp;#39; the given string.  This enters the string in the (global)
    table of interned strings whose purpose is to speed up dictionary lookups.
    Return the string itself or the previously interned string object with the
    same value.
&amp;#39;&amp;#39;&amp;#39;

```python
a = intern(&amp;quot;a b&amp;quot;)
b = intern(&amp;quot;a b&amp;quot;)
c = intern(&amp;quot;a b&amp;quot;)
```
```python
=&amp;gt; True
```
```python
a is b is c

=&amp;gt; True
```
----
## 지금까지는 REPL 환경에서 작업할 때 적용되는 기준이었다.
#### IDE를 이용한 Script 환경에서는 신경쓰지 않아도 된다.


```python
source = &amp;quot;&amp;quot;&amp;quot;
a = &amp;#39;ab cd!&amp;#39;
b = &amp;#39;ab cd!&amp;#39;
c = &amp;#39;ab cd!&amp;#39;
print(a is b is c)
&amp;quot;&amp;quot;&amp;quot;
```
```python
exec(source)
=&amp;gt; True
```
```python
source = &amp;quot;&amp;quot;&amp;quot;
a = 123123
b = 123123
c = 123123
print(a is b is c)
&amp;quot;&amp;quot;&amp;quot;
```
```python
exec(source)
=&amp;gt; True
```

----

# 함수형 프로그래밍

프로그램의 함수를 수학적 함수의 평가로 간주하고,

상태 변경 및 변경가능한 데이터를 피하는 방식(순수함수)


### 함수형 프로그래밍의 정의

1. 함수의 1급 객체
2. Recursion은 주요한 흐름 제어 방법. 
&amp;gt; loop구문 없는 언어도 존재
3. Sequence를 중점으로 다룬다.
4. 순수함수를 사용
5. 구문을 지양하거나, 완전히 허용하지 않는다. 표현식을 주로 사용. 
하나의 프로그램은 하나의 표현식(+정의)이다.
6. 고차함수를 사용한다.


## 철학자 루트비히 비트겐슈타인 - 언어의 한계가 나의 세계의 한계다.


### 함수형 프로그래밍의 장점

1. 코드양 적다.
2. 최적화하기 쉽다.
3. 모듈화 하기 쉽고 (기능별로 분리하기 쉽다.)
&amp;gt; 병행/병렬화 하기 쉽다.
4. 공식적인 증명가능
&amp;gt; 수학개념을 통해서 프로그램 증명할 수 있다.


## 함수형 언어의 조건

함수가 1급 객체인 언어

파이썬은 TCO(Tail Call Optimization; 꼬리 재귀 최적화)가 구현되어있지 않다.


## 함수형 vs 절차형 언어 비교
1부터 n까지 각 정수의 세제곱들의 합을 구하는 코드


```python
# 절차(명령)
n = 3
result = 0
for i in range(1, n+1):
    result += i**3
print(result)
```
```python
=&amp;gt; 36
```
```python
# 함수형
sum(map(lambda x: x**3, range(3+1)))

map(function_to_apply, list_of_inputs)
```
```python
=&amp;gt; 36
```

---

문자열 안에 숫자들의 합

&amp;quot;28+31++++32++39&amp;quot; 문자에서 숫자들의 합을 구하는 코드

&amp;gt; 출처: 2012 UA Pycon


```python
# 절차
expr = &amp;quot;28+31++++32++39&amp;quot;
res = 0
for t in expr.split(&amp;quot;+&amp;quot;):
    if t != &amp;quot;&amp;quot;:
        res += int(t)
print(res)
```
```python
=&amp;gt; 130
```
```python
# 함수형
expr = &amp;quot;28+31++++32++39&amp;quot;
sum(map(int, filter(len, expr.split(&amp;quot;+&amp;quot;))))
```
```python
=&amp;gt; 130
```

# 재귀함수

`자연에서 발생하는 문제들을 분석하면 결국엔 반복적인 관계가 생긴다.`

-&amp;gt; 점화식을 풀기 위한 기법

# 실습 : 등차수열

```
a(1) = 3
a(n) = a(n-1) + 2
```
```python
def a(n):
    if n == 1:
        return 3
    return a(n-1) + 2
```
### 실습 : 팩토리얼

```
a(1) = 1
a(n) = n * a(n-1)
```

```python
def a(n):
  if n ==1:
    return 1
  return n * a(n-1)
```

### 실습 : 3항 점화식

완전순열

A, B, C, D의 학생들이 시험 후 서로를 채점하게 할때, 
그 누구도 본인의 시험지를 채점하지 않고 모든 시험지를 채점하는 경우의 수는?

&amp;gt; 위 문제를 해결하는 점화식은 아래와 같습니다.

```
a(n) = n -1 (if n &amp;lt; 4)
a(n) = (n-1) * ( a(n-1) + a(n-2) )

a(n) =&amp;gt; n명이 자기 자신의 것을 갖지 않는 경우의 수
i)  두 번째 사람이 첫 번째 사람의 수를 가질 때: (n-1) * (1 * a(n-2))
ii) 두 번째 사람이 첫 버째 사람의 수를 가지지 않을 때: (n-1) * ( a(n-1) )
```
```python
def a(n):
  if n&amp;lt;4:
    return n-1
  return (n-1)*(a(n-1)+a(n-2))
```



#### 실습 : 피보나치 수열

```
a(n) = 1 (if n &amp;lt; 3)
a(n) = a(n-1) + a(n-2)
```

```python
def a(n):
  if(n&amp;lt;3):
    return 1
    
  return a(n-1) + a(n-2)
```&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sonypark/25b5be822b6c0772d7ac0470eedee4ef.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>박종천님 청춘특강</title>
   <link href="http://localhost:4000/etc/2019/02/06/etc-lecture01_JCP/"/>
   <updated>2019-02-06T00:00:00+09:00</updated>
   <id>http://localhost:4000/etc/2019/02/06/etc-lecture01_JCP</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: &lt;a href=&quot;https://www.youtube.com/watch?v=Ve-yWkrV29c&quot;&gt;[YCM] 제 1회 “끌리면 오라: 청춘특강” - 박종천 강사님&lt;/a&gt;&lt;/p&gt;

  &lt;p&gt;아래 내용은 위의 강의를 요약 정리한 내용입니다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;사람들은-나에게-왜-블리자드를-나왔냐고-묻는다&quot;&gt;사람들은 나에게 왜 블리자드를 나왔냐고 묻는다&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;사실 블리자드는 좋다&lt;/li&gt;
  &lt;li&gt;연봉도 높고, 편하고, 안정적이다.&lt;/li&gt;
  &lt;li&gt;그러나 그게 문제다&lt;/li&gt;
  &lt;li&gt;다 편하고 좋으니까 사람이 녹이 슨다.&lt;/li&gt;
  &lt;li&gt;배부른 돼지가 되는 거다&lt;/li&gt;
  &lt;li&gt;무엇이 중요한가?&lt;/li&gt;
  &lt;li&gt;우리의 삶의 목적은 무엇인가?&lt;/li&gt;
  &lt;li&gt;사람마다 다를 수 있다.&lt;/li&gt;
  &lt;li&gt;오늘은 내가 살아온 방식에 대해서 공유하고자 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;강의를-듣는-사람의-세-가지-유형&quot;&gt;강의를 듣는 사람의 세 가지 유형&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;듣고 잊어버림&lt;/li&gt;
  &lt;li&gt;듣고 기억함&lt;/li&gt;
  &lt;li&gt;듣고 기억하고 삶이 변함&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 강의를 듣고 삶이 조금이라도 변했으면 좋겠다.&lt;/p&gt;

&lt;h2 id=&quot;1-편한-곳-보단-힘든-곳으로-가라&quot;&gt;&lt;strong&gt;1. 편한 곳 보단 힘든 곳으로 가라&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;삶에서 중요한 건?&lt;/li&gt;
  &lt;li&gt;편한게 꼭 좋은 건 아니다&lt;/li&gt;
  &lt;li&gt;편하면 노력을 덜하게 되고 성장을 할 수 없다.
    &lt;ul&gt;
      &lt;li&gt;나의 경험&lt;/li&gt;
      &lt;li&gt;토목 회사 vs 한글과컴퓨터&lt;/li&gt;
      &lt;li&gt;토목 회사
        &lt;ul&gt;
          &lt;li&gt;개발 실장&lt;/li&gt;
          &lt;li&gt;높은 연봉&lt;/li&gt;
          &lt;li&gt;편하다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;한글과컴퓨터
        &lt;ul&gt;
          &lt;li&gt;말단 직원&lt;/li&gt;
          &lt;li&gt;낮은 연봉&lt;/li&gt;
          &lt;li&gt;일이 어려움&lt;/li&gt;
          &lt;li&gt;But, 뛰어난 개발자들이 많음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;사람이 한 번 쉬운걸 선택하면 계속 쉬운 것만 선택한다.&lt;/li&gt;
      &lt;li&gt;그 다음에도 쉽고 할 수 있는 것만 선택하게 된다.
        &lt;ul&gt;
          &lt;li&gt;우리는 언제 성장할까?&lt;/li&gt;
          &lt;li&gt;실패할 때? 성공할 때?
            &lt;ul&gt;
              &lt;li&gt;근육이 찢어져야 성장한다.&lt;/li&gt;
              &lt;li&gt;자신이 10kg을 들 수 있는데 1년 내내 5kg만 들어봤자 운동은 하나도 안 된다.&lt;/li&gt;
              &lt;li&gt;편하지만 성장하지 않는다.&lt;/li&gt;
              &lt;li&gt;11kg 이상 들어야 한다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;자신의 능력보다 조금 더 힘든 걸 해야 배우고 성장한다.&lt;/li&gt;
          &lt;li&gt;나는 회사에서 일을 시킬 때 반은 실패하도록 한다.&lt;/li&gt;
          &lt;li&gt;실패가 있어야 성장이 있다.&lt;/li&gt;
          &lt;li&gt;한 번도 실패하지 않는 사람은 한 번도 도전하지 않은 사람이다.&lt;/li&gt;
          &lt;li&gt;도전 없이 성장은 없다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;결국 한글과컴퓨터를 선택했다.
        &lt;ul&gt;
          &lt;li&gt;그곳에서는 힘들었지만 나오고 나니 다른 데서 일할 때는 너무 쉬웠다.&lt;/li&gt;
          &lt;li&gt;블리자드에서 오래 일하니 익숙해지고 편해졌다.&lt;/li&gt;
          &lt;li&gt;더이상 성장하지 않는다고 느꼈다.&lt;/li&gt;
          &lt;li&gt;좀 더 어려운 일을 하며 성장하기 위해 넥슨에 오기로 했다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;자신의 능력을 쌓아야 한다.&lt;/li&gt;
      &lt;li&gt;능력은 어려운 것에 도전하고 성장하는 과정에서 쌓인다
        &lt;ul&gt;
          &lt;li&gt;남들은 나에게 어떻게 했길래 그렇게 성공적인 길만 갈 수 있었느냐고 물은다&lt;/li&gt;
          &lt;li&gt;교만해 보일 수 있지만 나는 이렇게 말한다.&lt;/li&gt;
          &lt;li&gt;“어느 누구나 나만큼 노력하고 도전했다면 지금 이 자리에 왔을 거라고 믿는다.”&lt;/li&gt;
          &lt;li&gt;남들이 보기엔 편하게 편하게 산 것 같지만 그렇지 않다.&lt;/li&gt;
          &lt;li&gt;남들이 3번 도전해서 1번 성공할 때 나는 30번 도전해서 3번 성공했다.&lt;/li&gt;
          &lt;li&gt;이러한 강연 자체도 그렇다.&lt;/li&gt;
          &lt;li&gt;망한 강연도 굉장히 많다. 혼자서 속상해한 적도 많다.&lt;/li&gt;
          &lt;li&gt;실패한 강연이 지금의 나를 만들었다.&lt;/li&gt;
          &lt;li&gt;실패가 나를 만든 거지 성공이 나를 만든게 아니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-나-스스로에-대한-믿음이-있어야-한다---자존감&quot;&gt;&lt;strong&gt;2. 나 스스로에 대한 믿음이 있어야 한다. - 자존감&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;마음속 깊이 나는 할 수 있다는 느낌이 있어야 한다.&lt;/li&gt;
  &lt;li&gt;사람은 실패했을 때 본성이 나온다.&lt;/li&gt;
  &lt;li&gt;성공을 했을 때는 그냥 가지만 실패했을 때 무너진다.&lt;/li&gt;
  &lt;li&gt;실패했을 때 다시 올라갈 수 있는 힘이 바로 자존감이다.&lt;/li&gt;
  &lt;li&gt;결과가 아닌 과정을 칭찬하라
    &lt;ul&gt;
      &lt;li&gt;남과의 경쟁은 중요한 게 아니다&lt;/li&gt;
      &lt;li&gt;모든 것의 중심은 나여야 한다.&lt;/li&gt;
      &lt;li&gt;밖을 보는 만큼 안도 봐야한다.&lt;/li&gt;
      &lt;li&gt;나 스스로를 믿고 중심을 잡을 때 굳건히 성장할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;나뭇가지에 앉은 새는 나뭇가지가 부러지는 것에 대해 걱정하지 않는다.
    &lt;ul&gt;
      &lt;li&gt;그것은 나뭇가지가 부러지지 않을 거라는 믿음이 있어서가 아니라 자신에게 날개가 있기 때문이다.&lt;/li&gt;
      &lt;li&gt;사람들은 보통 환경에 대해 불안해한다.&lt;/li&gt;
      &lt;li&gt;새는 나뭇가지가 부러질것에 대해 불안해하지 않는다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;환경을 넘어서서 사는 방법은 자존감과 능력이다.
    &lt;ul&gt;
      &lt;li&gt;나 스스로에 대한 확신&lt;/li&gt;
      &lt;li&gt;그 확신을 바탕으로 한 노력&lt;/li&gt;
      &lt;li&gt;이를 통한 성장&lt;/li&gt;
      &lt;li&gt;이 세 가지가 복합적으로 이루어졌을 때 자시만의 날개가 생긴다.&lt;/li&gt;
      &lt;li&gt;나뭇가지에 앉은 새처럼 불안해 하지 않을 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;자존감
    &lt;ul&gt;
      &lt;li&gt;나는 나를 얼마나 좋아하는가?&lt;/li&gt;
      &lt;li&gt;머리부터 발끝까지 나 자신을 사랑해야한다.&lt;/li&gt;
      &lt;li&gt;그러기위해선 노력이 필요하다&lt;/li&gt;
      &lt;li&gt;스스로에게 결과가 아닌 과정을 칭찬해줘야 한다.&lt;/li&gt;
      &lt;li&gt;내가 나를 좋아하는 것도 내가 이룬 결과를 좋아해서는 안 되고 좋은 결과를 얻기 위해 노력하는 지금 이 과정을 좋아해야한다.
        &lt;ul&gt;
          &lt;li&gt;성적이 좀 나빠서 - 공부를 열심히 한다 - 이런 내가 마음에 든다.&lt;/li&gt;
          &lt;li&gt;살이 좀 쪘네 - 운동을 열심히 한다. - 이런 내가 마음에 든다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;나의 상태를 좋아할 필요가 없다.&lt;/li&gt;
      &lt;li&gt;나의 방향을 좋아하면 된다.
남들에게도 그 사람의 상태가 아닌 그 사람이 나아가고 있는 방향을 칭찬해줘라&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-노력은-꾸준함-이다&quot;&gt;&lt;strong&gt;3. 노력은 꾸준함 이다.&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;노력은 밤새는 게 아니다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;다음날 시험을 위해 밤을 새면 그 다음 시험에도 밤을 새게 된다.&lt;/li&gt;
  &lt;li&gt;노력은 그 날 바짝 하는 게 아니라 평소에 꾸준히 하는 것이다.&lt;/li&gt;
  &lt;li&gt;운동하기로 마음 먹었으면 매일 30분이라도 1년 내내 꾸준히하는게 노력이지 오늘 1km 뛰는 게 노력이 아니다.&lt;/li&gt;
  &lt;li&gt;그래서 노력이 어려운거다.&lt;/li&gt;
  &lt;li&gt;노력이 능력보다 훨씬 더 어렵다.&lt;/li&gt;
  &lt;li&gt;무언가를 하려면 꾸준하게 할 마음으로 해야한다.&lt;/li&gt;
  &lt;li&gt;습관의 힘
    &lt;ul&gt;
      &lt;li&gt;습관이 생겨야 꾸준히 할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;이러한 노력도 자존감이 있어야 할 수 있다.
    &lt;ul&gt;
      &lt;li&gt;자존감이 없으면 매일매일 이렇게 못 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-성공의-3대-요소&quot;&gt;&lt;strong&gt;4. 성공의 3대 요소&lt;/strong&gt;&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;능력&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;좋아하는 것? 잘하는 것?&lt;/li&gt;
      &lt;li&gt;보통 잘하는 걸 좋아할 가능성이 높다.&lt;/li&gt;
      &lt;li&gt;꾸준히 도전하고 성장하며 능력을 쌓아야한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;노력&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;누구나 김연아만큼 연습했으면 그 만큼 됐을 거다.&lt;/li&gt;
      &lt;li&gt;그런데 아무도 그렇게 못한다. 그만큼 힘들다.&lt;/li&gt;
      &lt;li&gt;이러한 노력 조차도 능력이 있어야 할 수 있다.&lt;/li&gt;
      &lt;li&gt;능력 없이 노력만 하게 되면 제자리 걸음이 될 수 있다.&lt;/li&gt;
      &lt;li&gt;내가 잘하는 것을 끊임 없이 노력하고 지속해야한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;기회&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;기회는 우리가 만들 수 있는 게 아니다.&lt;/li&gt;
      &lt;li&gt;시간의 흐름에 따라 생긴다.&lt;/li&gt;
      &lt;li&gt;능력과 노력이 있어도 기회가 없을 수 있다.&lt;/li&gt;
      &lt;li&gt;하지만 기회만 있으면 그 기회를 잡을 수 없다. 그래서 없는 것과 마찬가지이다.&lt;/li&gt;
      &lt;li&gt;기회는 끝없이 온다. 그 기회를 발견하고 잡을 수 있는 것은 능력과 노력이 준비되었을 때다.&lt;/li&gt;
      &lt;li&gt;왜 나에게 기회가 주어지지 않는가를 고민할 필요할 없다.&lt;/li&gt;
      &lt;li&gt;나는 어디에 능력이 있고 계속 노력하고 있는가 - 이것에 집중해야한다.&lt;/li&gt;
      &lt;li&gt;그 사이 사이에 기회는 정말 많이 온다.&lt;/li&gt;
      &lt;li&gt;능력과 노력이 부족해서 문제지 기회가 부족한 경우는 거의 없다.&lt;/li&gt;
      &lt;li&gt;밖이 아닌 안에 쌓아라&lt;/li&gt;
    &lt;/ul&gt;
    &lt;ul&gt;
      &lt;li&gt;능력과 노력은 자기 안에 쌓는 거다
    - 내가 가지고 있는 시간과 돈을 최대한 다 쓰고 가고 싶다.&lt;/li&gt;
      &lt;li&gt;100m 달리기를 할 때 100m를 다 달리고 체력이 남아서 더 뛰고 싶다는 건 의미가 없다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;5-채용할-때-보는-세-가지&quot;&gt;&lt;strong&gt;5. 채용할 때 보는 세 가지&lt;/strong&gt;&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;똑똑한가&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;깊게 사고하는가&lt;/li&gt;
      &lt;li&gt;보통 A,B만 생각하는데&lt;/li&gt;
      &lt;li&gt;A앞에는 뭐가 있고 B 뒤에는 뭐가 있는지 생각할 줄 아는가&lt;/li&gt;
      &lt;li&gt;대화를 해보면 금방 알 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;부지런한가&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;게으르면 안 된다.&lt;/li&gt;
      &lt;li&gt;게으른 사람은 노력을 안 한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;착한가&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;사람이 선해야 한다.&lt;/li&gt;
      &lt;li&gt;선해야 남들에게도 도움을 줄 수 있다.&lt;/li&gt;
      &lt;li&gt;그 도움이 나중에 그 사람에게 돌아가며 선순환 구조를 이룬다.&lt;/li&gt;
      &lt;li&gt;착하지 않은 사람은 자존감이 낮기 때문이라고 생각한다.&lt;/li&gt;
      &lt;li&gt;자존감이 높은 사람은 사랑을 남에게서 받을 필요가 없고 자기 안에서 퍼주면 되기 때문에 착하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 문자열 회전</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/05/AT-rotate_string/"/>
   <updated>2019-02-05T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/05/AT-rotate_string</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1.9 문자열 회전&lt;/li&gt;
  &lt;li&gt;한 단어가 다른 문자열에 포함되어 있는지 판별하는 isSubstring이라는 매서드가 있다고 하자.
s1과 s2의 두 문자열이 주어졌고, s2가 s1을 회전시킨 결과인지 판별하고자 한다.&lt;/li&gt;
  &lt;li&gt;Ex) waterbottle 은 erbottlewat 을 회전시켜 얻을 수 있는 문자열이다.&lt;/li&gt;
  &lt;li&gt;isSubstring 메서드를 한 번만 호출해서 판별할 수 잇는 코드를 작성하라.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotateString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 문자열 길이가 다르면 False
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;s1s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'일치하는 문자열 없음'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;1시간을 고민 끝에 해설을 보고 힌트를 얻었다. 문자열 두 개를 연결하는 생각은 해설을 보지 못 않았으면 전혀 생각으 못 했을 것 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;최소 1시간은 고민하고 전혀 감이 안 잡힐 땐 해설을 보고 힌트를 얻자.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 문자열 압축</title>
   <link href="http://localhost:4000/algorithm%20test/2019/02/04/AT-str_compression/"/>
   <updated>2019-02-04T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/02/04/AT-str_compression</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;1.6 문자열 압축&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;반복되는 문자의 개수를 세는 방식의 기본적인 문자열 압축 메서드를 작성하라.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Ex) aabcccccaaa =&amp;gt; a2b1c5a3&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;단, ‘압축된’ 문자열의 길이가 기존 문자열의 길이보다 길다면 기존 문자열을 반환해야 한다.
문자열은 대소문자 알파벳(a~z)으로만 이루어져 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;strCompression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 첫번째 문자 넣기
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# 현재 문자와 다음 문자 비교
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 같다
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 같은 문자 수(count)
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 다르다
&lt;/span&gt;            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 이전에 같은 문자가 있었다면
&lt;/span&gt;                &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 같은 문자 수(count) 넣기
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 다음 문자 넣기
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# count 초기화
&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 마지막 문자 수(count)
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 같은 문자가 있다면
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 같은 문자 수(count) 넣기
&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;new_str&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;기존의 문자열만 가지고 수정하기보다 새로운 문자열(&lt;code class=&quot;highlighter-rouge&quot;&gt;new_str&lt;/code&gt;)을 만들어서 하는 푸는 방법&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190202</title>
   <link href="http://localhost:4000/til/2019/02/02/TIL/"/>
   <updated>2019-02-02T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/02/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;배열과 문자열&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;1.7 행렬 회전&lt;/li&gt;
      &lt;li&gt;1.9 문자열 회전&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;김태훈님 D2 Factory meetup 참석
    &lt;ul&gt;
      &lt;li&gt;머신러닝
        &lt;ul&gt;
          &lt;li&gt;python만으로는 절대 잘 할 수 없음&lt;/li&gt;
          &lt;li&gt;low level에서의 최적화를 하려면&lt;/li&gt;
          &lt;li&gt;최소 C는 알아야 한다.&lt;/li&gt;
          &lt;li&gt;프로젝트 10개 정도 구현(분야별 각가 2~3개씩)
            &lt;ul&gt;
              &lt;li&gt;Computer Vsion&lt;/li&gt;
              &lt;li&gt;NLP&lt;/li&gt;
              &lt;li&gt;RL&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Burnout이 생기는 이유
        &lt;ul&gt;
          &lt;li&gt;workload 때문이 아닌 mementum 때문&lt;/li&gt;
          &lt;li&gt;일의 양이 많아서가 아니라 성장하지 않는다고 느낄 때 생김&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;OpenAI에서 일하시는 개발자 김태훈님이 기획하신 meetup 행사에 다녀왔다. 미국에서의 생활과 딥러닝 공부, 딥러닝 리서쳐와 엔지니어 사이의 고민 등에 딥러닝을 공부하는 개발자들에게 유용한 팁을 많이 들을 수 있었다.&lt;/li&gt;
  &lt;li&gt;가길 정말 잘했다. 좋은 자극을 받았고 큰 동기부여가 되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190201</title>
   <link href="http://localhost:4000/til/2019/02/01/TIL/"/>
   <updated>2019-02-01T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/02/01/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;배열과 문자열&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;1.5 하나 빼기&lt;/li&gt;
      &lt;li&gt;1.6 문자열 압축&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;혼자 공부하는 것보다 함께하는 게 더 좋다. 혼자하면 안 보이던 부분이 함께 공부하는 친구의 눈으로 보면 보인다. 어느 정도의 고민은 필요하지만 그 이상의 고민은 불필요할 때가 많다. 함께 공부하면 그런 불필요한 고민에서 빨리 빠져나올 수 있다.&lt;/li&gt;
  &lt;li&gt;결론, 알고리즘 스터디를 하기 잘 한 것 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190131</title>
   <link href="http://localhost:4000/til/2019/01/31/TIL/"/>
   <updated>2019-01-31T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/31/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이: &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;배열과 문자열&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;1.1 중복이 없는가&lt;/li&gt;
      &lt;li&gt;1.2 순열 확인&lt;/li&gt;
      &lt;li&gt;1.3 URL화&lt;/li&gt;
      &lt;li&gt;1.4 회문 순열&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;어제 밤부터 컨디션이 너무 안 좋았다. 뒷목과 어깨가 뻐근하고 어지럼증이 심했다. 속도 안 좋아 밤잠을 설쳤다. 새벽에도 몇 번씩 깼다. 아침에 일어나니 많이 나아졌지만 목과 어깨가 여전히 굳어있었다. 한의원에 가서 침을 맞고 왔다.&lt;/li&gt;
  &lt;li&gt;아무래도 매일 앉아서 노트북을 하는 시간이 많다보니 목에 무리가 온 것 같다. 노트북 화면의 위치가 낮다보니 거북목이 되는 등 자세 흐트러짐이 심하다. 고민끝에 노트북 거치대를 주문했다. 하루 중 대부분의 시간을 컴퓨터 앞에 앉아 보내는데 이제는 자세도 신경을 써야겠다.&lt;/li&gt;
  &lt;li&gt;몸이 아프면 정말 아무것도 못한다. 건강 관리도 실력이다. 스트레칭과 자세 교정도 틈틈이 하자.&lt;/li&gt;
  &lt;li&gt;알고리즘 책을 보며 공부하고 있는데 재미있다. 특히 예전에 풀었던 문제풀이 방식을 응용하여 풀었을 때 기분이 좋다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190130</title>
   <link href="http://localhost:4000/til/2019/01/30/TIL/"/>
   <updated>2019-01-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/30/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;Lv1 - 소수 찾기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;알고리즘 문제 하나 푸는데 2시간이 걸렸다. 힌트를 보지 않고 최대한 혼자서 풀었다. 다른 사람의 풀이를 보니 간단하지만 이해가 안 되는 부분이 많아 다시 공부해야겠다.&lt;/li&gt;
  &lt;li&gt;하루 하나씩 간단한 알고리즘 문제를 푸는 것은 좋은 것 같다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 강의(6회차)&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 최대공약수 최소공배수</title>
   <link href="http://localhost:4000/algorithm%20test/2019/01/30/AT-gcdlcm/"/>
   <updated>2019-01-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/01/30/AT-gcdlcm</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/12940&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 
배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 
예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;두 수는 1이상 1000000이하의 자연수입니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# 방법1
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gcdlcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;range_num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# 둘 중 작은 수 까지의 범위만 구하면 된다.
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;range_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# [G, L], 최대공약수, 최소공배수
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;# 방법2 (유클리드 호제법)
&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'''
a를 b로 나눈 나머지가 r이라고 하자(a&amp;gt;=b, 0&amp;lt;=r&amp;lt;b)
a와b의 최대공약를 (a,b)라고 하면 다음이 성립한다.
(a,b) = (b,r)

ex) (1071,1029) = (1029,42) = (42,21) = (21,0) = 21
'''&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;gcdlcm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;remainder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;G&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;L&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;G&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;L&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;a,b의 최소공배수 = a*b/G (G = a,b의 최대공약수)&lt;/li&gt;
  &lt;li&gt;유클리드 호제법으로 최대공약수를 빠르고 효율적으로 구하는 법을 알게되었다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;다른 사람의 풀이를 보며 좀 더 효율적인 방법을 알아가는 재미가 있다.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>유클리드 호제법(Euclidean algorithm)</title>
   <link href="http://localhost:4000/algorithm%20test/2019/01/30/AT-Euclidean-algorithm/"/>
   <updated>2019-01-30T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/01/30/AT-Euclidean algorithm</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: &lt;a href=&quot;https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95#%EC%A0%95%EC%88%98%EC%9D%98_%EA%B2%BD%EC%9A%B0&quot;&gt;위키피디아&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;정의&quot;&gt;정의&lt;/h2&gt;
&lt;p&gt;2개의 자연수(또는 정식) a, b에 대해서 a를 b로 나눈 나머지를 r이라 하면(단, a&amp;gt;b), a와 b의 최대공약수는 b와 r의 최대공약수와 같다.&lt;/p&gt;

&lt;h4 id=&quot;정리&quot;&gt;정리&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;a를 b로 나눈 나머지 = r (a&amp;gt;=b, 0&amp;lt;=r&amp;lt;b)&lt;/li&gt;
  &lt;li&gt;a,b의 최대공약를 (a,b)라고 하면 다음이 성립한다.&lt;/li&gt;
  &lt;li&gt;(a,b) = (b,r)&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1071&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1029&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1029&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;1071&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1029&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;1029&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190129</title>
   <link href="http://localhost:4000/til/2019/01/29/TIL/"/>
   <updated>2019-01-29T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/29/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;코루틴&lt;/li&gt;
      &lt;li&gt;데코레이터&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;Lv1 - 평균 구하기&lt;/li&gt;
      &lt;li&gt;Lv1 - 최대공약수와 최소공배수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;예전에 잠깐 일했던 곳에서 연락이 왔다. 정말 좋은 기회이지만 내가 공부하는 방향과는 달라서 고사했다. 그만큼 지금 공부하는 것에 확신이 있고 간절하다. 오늘 연락을 받고 나니 지금의 시간이 더 소중해졌다. 한 시간 한 시간을 허투루 쓰지 말고 내가 원하는 것에 집중하자.&lt;/li&gt;
  &lt;li&gt;비전공자로서 예전과는 전혀 다른 공부를 하고 있지만 나는 지금하는 공부가 좋고 재미있다. 내가 틀리지 않았다는 걸 증명해내자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190128</title>
   <link href="http://localhost:4000/til/2019/01/28/TIL/"/>
   <updated>2019-01-28T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/28/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부
    &lt;ul&gt;
      &lt;li&gt;두 점 사이의 거리&lt;/li&gt;
      &lt;li&gt;예외 처리&lt;/li&gt;
      &lt;li&gt;이터레이터 사용하기&lt;/li&gt;
      &lt;li&gt;제너레이터 사용하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;알고리즘 문제풀이
    &lt;ul&gt;
      &lt;li&gt;Lv1 - 짝수와훌수&lt;/li&gt;
      &lt;li&gt;Lv1 - 가운데문자출력&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;세상에서 가장 어려운게 꾸준히 하는 것 같다. 작심삼일이라는 말이 괜히 나온 게 아니다. 통계적으로 대부분 3일을 못 가기 때문이다. 무엇이든 꾸준히만 지속하면 못 할 수가 없다.&lt;/li&gt;
  &lt;li&gt;매일 TIL을 하기로 스스로 다짐하고도 벌써 세 번째 공백이 생겼다. 반성하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;알고리즘 공부&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190127</title>
   <link href="http://localhost:4000/til/2019/01/27/TIL/"/>
   <updated>2019-01-27T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/27/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부
    &lt;ul&gt;
      &lt;li&gt;클래스 사용하기&lt;/li&gt;
      &lt;li&gt;클래스 속성, static method, class method&lt;/li&gt;
      &lt;li&gt;클래스 상속&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190126</title>
   <link href="http://localhost:4000/til/2019/01/26/TIL/"/>
   <updated>2019-01-26T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/26/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 4회차 수업&lt;/li&gt;
  &lt;li&gt;알고리즘 스터디&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;친구들과 같이 자료구조와 알고리즘 스터디를 시작했다. 교재는 &lt;a href=&quot;http://www.kyobobook.co.kr/product/detailViewKor.laf?mallGb=KOR&amp;amp;ejkGb=KOR&amp;amp;barcode=9788966263080&amp;amp;orderClick=JAj&quot;&gt;코딩인터뷰완전분석&lt;/a&gt;으로 공부하려 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190125</title>
   <link href="http://localhost:4000/til/2019/01/25/TIL/"/>
   <updated>2019-01-25T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/25/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;운동 1시간&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;다시 운동을 시작했다. 장기간 공부하려면 체력이 필수다. 운동도 꾸준히하자&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190124</title>
   <link href="http://localhost:4000/til/2019/01/24/TIL/"/>
   <updated>2019-01-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/24/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부
    &lt;ul&gt;
      &lt;li&gt;람다 함수&lt;/li&gt;
      &lt;li&gt;클로저&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;알고리즘 문제풀이: &lt;a href=&quot;https://programmers.co.kr/learn/courses/30/lessons/42576&quot;&gt;Lv1_완주하지못한선수&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 4회차 수업&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2를 완료했다. 책이 꽤 두꺼워서 완독하는데 시간이 좀 걸리지만 그래도 배우는 게 많다.&lt;/li&gt;
  &lt;li&gt;처음으로 알고리즘 문제를 풀어봤다. 가장 쉬운 문제를 푸는데도 시간이 오래 걸렸다.(대략 1시간 반 정도). 다른 사람의 풀이를 보면서 정말 많이 배운다. 내가 전혀 생각하지 못 한 방식으로 더 간결하게 풀이한 코드를 보면서 더 겸손해지고 자극을 받는다.&lt;/li&gt;
  &lt;li&gt;앞으로 꾸준히 알고리즘 문제를 풀 생각이다. 아직 알고리즘 문제풀이에 익숙지 않지만 많이 풀다 보면 익숙해질 날이 올 것이라 생각한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 3 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Lv1 - 완주하지 못한 선수 (Python)</title>
   <link href="http://localhost:4000/algorithm%20test/2019/01/24/AT-list-comparison/"/>
   <updated>2019-01-24T00:00:00+09:00</updated>
   <id>http://localhost:4000/algorithm%20test/2019/01/24/AT-list comparison</id>
   <content type="html">&lt;blockquote&gt;
  &lt;p&gt;출처: https://programmers.co.kr/learn/courses/30/lessons/42576&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;문제&quot;&gt;문제&lt;/h2&gt;
&lt;p&gt;수 많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다.
마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;

&lt;h4 id=&quot;제한사항&quot;&gt;제한사항&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다.&lt;/li&gt;
  &lt;li&gt;completion의 길이는 participant의 길이보다 1 작습니다.&lt;/li&gt;
  &lt;li&gt;참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다.&lt;/li&gt;
  &lt;li&gt;참가자 중에는 동명이인이 있을 수 있습니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;예시&quot;&gt;예시&lt;/h4&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mislav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stanko&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mislav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stanko&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ana&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mislav&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mislav&lt;/span&gt;   &lt;span class=&quot;c1&quot;&gt;# mislav는 동명이인, 완주자 명단에는 한 명밖에 없기 때문에 한 명은 완주하지 못함.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;풀이&quot;&gt;풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# 이름을 오름차순으로 정렬
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 동명이인 중에 완주 못한 사람 체크
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;zip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# 동명이인이고 완주를 하지 못했으나 이름 상 제일 뒤에 있는 사람인 경우 체크
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# 예시) 정렬된 후의 변수가 
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;# participant['a', 'b', 'b', 'z', 'z'], completion['a', 'b', 'b', 'z'] 인 경우
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;다른-사람-풀이&quot;&gt;다른 사람 풀이&lt;/h2&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;collections&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solution&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;participant&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collections&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;completion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;배운점&quot;&gt;배운점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;다른 사람의 풀이를 보고 Counter 함수에 대해 알게 되었다.&lt;/li&gt;
  &lt;li&gt;Counter 함수는 리스트 안의 객체를 key값으로 객체의 갯수를 value값으로 해서 컨테이너로 만들어준다.&lt;/li&gt;
  &lt;li&gt;Counter 객체는 서로 더하기 빼기가 가능하다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;느낀점&quot;&gt;느낀점&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;처음으로 알고리즘 문제를 풀어봤다.&lt;/li&gt;
  &lt;li&gt;가장 쉬운 단계임에도 푸는데 시간이 꽤 걸렸다.&lt;/li&gt;
  &lt;li&gt;다른 사람의 문제풀이를 보며 많이 배웠다.&lt;/li&gt;
  &lt;li&gt;파이썬의 간결함에 놀랐다. (아는 만큼 보인다.)&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_190123</title>
   <link href="http://localhost:4000/til/2019/01/23/TIL/"/>
   <updated>2019-01-23T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/23/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부
    &lt;ul&gt;
      &lt;li&gt;세트(set) 사용하기&lt;/li&gt;
      &lt;li&gt;파일 사용하기&lt;/li&gt;
      &lt;li&gt;회문 판별과 N-gram 만들기&lt;/li&gt;
      &lt;li&gt;함수 사용하기&lt;/li&gt;
      &lt;li&gt;함수에서 위치 인수와 키워드 인수 사용하기&lt;/li&gt;
      &lt;li&gt;재귀함수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;내일이면 - &lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2가 끝나고 part 3로 들어갈 거 같다. 이번 주 안으로 완독하는 것을 목표로 하자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190122</title>
   <link href="http://localhost:4000/til/2019/01/22/TIL/"/>
   <updated>2019-01-22T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/22/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;오늘은 집안일을 도울 게 있어서 개발 공부에 시간을 많이 쏟지 못했다. 그래도 필요할 때 도움이 될 수 있어 뿌듯했다.&lt;/li&gt;
  &lt;li&gt;내일부터 다시 공부 시작이다 :)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190121</title>
   <link href="http://localhost:4000/til/2019/01/21/TIL/"/>
   <updated>2019-01-21T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/21/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 중급 강의 세 번째 수업 정리 및 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/sonypark/25b5be822b6c0772d7ac0470eedee4ef&quot;&gt;gist.github.com&lt;/a&gt;에 업로드
    &lt;ul&gt;
      &lt;li&gt;1급객체 함수&lt;/li&gt;
      &lt;li&gt;재귀호출&lt;/li&gt;
      &lt;li&gt;멀티플 디스패치 처리&lt;/li&gt;
      &lt;li&gt;함수형 처리 함수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부
    &lt;ul&gt;
      &lt;li&gt;문자열 응용하기&lt;/li&gt;
      &lt;li&gt;딕셔너리 응용하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;하용호님이 공유해주신 &lt;a href=&quot;https://drive.google.com/file/d/1uQ5VOXBNk_Nf6V5JUXhKl2pHZY5N1wA4/view?usp=drive_open&quot;&gt;발표의 정석&lt;/a&gt;을 보고 큰 감명을 받았다.&lt;/li&gt;
  &lt;li&gt;평소에 &lt;a href=&quot;https://www.slideshare.net/yongho?utm_campaign=profiletracking&amp;amp;utm_medium=sssite&amp;amp;utm_source=ssslideview&quot;&gt;하용호님의 SlideShare&lt;/a&gt;에서 ppt를 보고 이 분 설명 참 잘 하신다라고 느꼈다. 하용호님의 ppt를 보고 있으면 눈 앞에서 발표를 듣고 있는 느낌이다. 글자가 아닌 음성이 들린다. ppt만 봐도 이 정도인데 실제로 발표를 들으면 얼마나 재미있을까라는 생각이 든다.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://drive.google.com/file/d/1uQ5VOXBNk_Nf6V5JUXhKl2pHZY5N1wA4/view?usp=drive_open&quot;&gt;발표의 정석&lt;/a&gt;에는 발표를 잘하면 무엇이 좋은지, 어떻게 하면 발표를 잘 할 수 있는지에 대한 하용호님의 경험과 노하우가 고스란히 들어있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h3 id=&quot;-발표의-정석-내용-중-&quot;&gt;– &lt;a href=&quot;https://drive.google.com/file/d/1uQ5VOXBNk_Nf6V5JUXhKl2pHZY5N1wA4/view?usp=drive_open&quot;&gt;발표의 정석&lt;/a&gt; 내용 중 –&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;나비가 아니라면 꽃이 되면 된다.

발표는 꽃이 되는 방법. 그러면 기회가 내게로 온다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;발표는-성장과-기회를-가져다-준다&quot;&gt;발표는 &lt;code class=&quot;highlighter-rouge&quot;&gt;성장&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;기회&lt;/code&gt;를 가져다 준다.&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;성장&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;머릿속에 파편화 되어있던 지식을 정말 나의 지식으로 만드는 시간&lt;/code&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;내 발표를 듣는 첫번째 청중은 나 자신이다. 내가 가장 많이 배운다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;기회&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;내가 무엇을 알고 있고, 내가 무엇을 하고 있는지 알리는 시간&lt;/code&gt;&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;오늘 이 강의장에서의 누군가가 나중에 나에게 큰 기회를 가져다 준다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>패스트캠퍼스_파이썬중급_02</title>
   <link href="http://localhost:4000/python/2019/01/20/py-fastcampus02/"/>
   <updated>2019-01-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/python/2019/01/20/py-fastcampus02</id>
   <content type="html">&lt;noscript&gt;&lt;pre&gt;#  함수의 정의 및 호출
 - 함수 객체 이해하기
 - 함수 네임스페이스 및 스코프
 - 람다함수 이해하기
 
# 파이썬 함수의 장점
why 함수를 써야하는가
- 그냥 코드로 작성하는 것보다 빠르다(항상)

```python
N = 10000
```

```python
## 일반 코드(line by line)로 작성했을 때

%%time

result = 0
for i in range(1, N+1):
    result += i**2
```
```python
=&amp;gt; Wall time: 5.17 ms
```

```python
## 함수로 만들었을 떄
def cal(n):
    result = 0
    for i in range(1, n+1):
        result += i**2
    return result
```

```python
%%time
cal(N)

=&amp;gt; Wall time: 3.85 µs
```

스크립트 파일일때도 동일한 차이를 보이는지 확인하기 위해서 2종류의 파일을 생성

```python
%%writefile func1.py
#함수를 정의하지 않은 연산

import time

start_time = time.perf_counter() # 시작하는 시간 얻기 (float)

result = 0
for i in range(100000):
    result += i**2
    
end_time = time.perf_counter() # 끝난 시간 얻기 (float)

print(end_time - start_time) # (끝난 시간 - 시작한 시간 ) 차이로 걸린 시간 보기


=&amp;gt; Overwriting func1.py
```

```python
%%writefile func2.py
# 함수로 정의한 연산

import time

def cal(n):
    result = 0
    for i in range(1, n+1):
        result += i**2
    return result


start_time = time.perf_counter()

cal(100000)

end_time = time.perf_counter()

print(end_time - start_time)


=&amp;gt; Overwriting func2.py
```

```python
!python func1.py
=&amp;gt; 0.051213420999999995
```

```python
!python func2.py
=&amp;gt; 0.039568119
```

### 함수를 정의하면, 함수의 로직이 보다 빠른 바이너리화된 코드로 변환되어 저장됨


```python
def cal(n):
    result = 0
    for i in range(1, n+1):
        result += i**2
    return result
```

```python
cal = function(code, globals(), cal)
```

```python
# 코드객체가 저장된 스페셜 속성
cal.__code__

=&amp;gt; &amp;lt;code object cal at 0x1044e54b0, file &amp;quot;&amp;lt;ipython-input-269-bed2481b6e06&amp;gt;&amp;quot;, line 1&amp;gt;
```

# 함수 namespace

```python
CONST = 3


def outer(a):
    def inner(b):
        b += 2
        print(&amp;#39;inner&amp;#39;, locals())
        return b
    a += 1
    print(&amp;#39;outer&amp;#39;, locals())
    return inner(a) # &amp;lt;-- inner의 실행

```

```python
outer(9)
```
```python
outer {&amp;#39;a&amp;#39;: 10, &amp;#39;inner&amp;#39;: &amp;lt;function outer.&amp;lt;locals&amp;gt;.inner at 0x104463620&amp;gt;}
inner {&amp;#39;b&amp;#39;: 12}
12
```

### inner함수에서 outer함수의 변수를 참조하려고 할때

```python
CONST = &amp;#39;global&amp;#39;

def outer(a):
    def inner(b):
        b += 1
        print(CONST, a, b) # b는 in localname / a is not in localname
        return a, b
    return inner(a)
```
```python
outer(10)
```
```python
=&amp;gt; global 10 11
   (10, 11)
```

&amp;gt; inner에서 outer함수의 namespace 의 이름은 항상 참조 가능
---

### outer함수에서 inner함수안에 있는 변수를 참조하려고 할 때

```python
def outer(a):
    def inner(b):
        b += 1
        return b
    c = inner(a)
    print(b)
    return c

```
```python
outer(9)
```
```python
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
&amp;lt;ipython-input-30-8c3a9492d915&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 outer(9)

&amp;lt;ipython-input-29-1c94c554a418&amp;gt; in outer(a)
      4         return b
      5     c = inner(a)
----&amp;gt; 6     print(b)
      7     return c

NameError: name &amp;#39;b&amp;#39; is not defined
```
&amp;gt; outer에서 inner함수안에 이름은 참조 불가능
---

### inner에서 outer의 변수를 변경하려고 하면?


```python
def outer(a):
    def inner(b):
        a = 2
        return a + b
    c = inner(a)
    print(&amp;#39;print a&amp;#39;, a)
    return c
```
```python
outer(10)
```
```python
=&amp;gt; print a 10
   12
```
&amp;gt; inner안에서 변수 a를 새로 생성하는 것 (초기화)

---

### inner함수에서 outer함수안에 변수를 참조한 후 변경하려고 하면?

```python
def outer(a):
    def inner(b):
        print(a)
        a = 2
        return a + b
    return inner(a)
```
```python
outer(10)
```
```python
---------------------------------------------------------------------------
UnboundLocalError                         Traceback (most recent call last)
&amp;lt;ipython-input-55-77e72c7f0d1d&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 outer(10)

&amp;lt;ipython-input-54-274b40db2e80&amp;gt; in outer(a)
      4         a = 2
      5         return a + b
----&amp;gt; 6     return inner(a)

&amp;lt;ipython-input-54-274b40db2e80&amp;gt; in inner(b)
      1 def outer(a):
      2     def inner(b):
----&amp;gt; 3         print(a)
      4         a = 2
      5         return a + b

UnboundLocalError: local variable &amp;#39;a&amp;#39; referenced before assignment
```
&amp;gt; inner함수안에 이름 `a`를 생성하는(할당하는) 구문이 존재하기 때문에, 외부에 있는(global 또는 nonlocal) 이름을 참조할 수 없음.
---

참조만 하려는 경우

```python
import dis

def outer(a):
    def inner(b):
        print(a)
        return a + b
    dis.dis(inner)
    return inner(a)
```

```python
outer(10)
```

```
  3           0 LOAD_GLOBAL              0 (print)
              2 LOAD_DEREF               0 (a)
              4 CALL_FUNCTION            1
              6 POP_TOP

  4           8 LOAD_DEREF               0 (a)
             10 LOAD_FAST                0 (b)
             12 BINARY_ADD
             14 RETURN_VALUE
10
20
```
&amp;gt; 변수 `a`를 찾을 때 수행하는 작업 :  `LOAD_DEREF`

&amp;gt; 즉, 자유변수에서 찾고있음.

---

참조 후 변경하려는 경우

```python
def outer(a):
    def inner(b):
        print(a)
        a = 2
        return a + b
    dis.dis(inner)
    return inner(a)
```
```python
outer(10)
```
```
  3           0 LOAD_GLOBAL              0 (print)
              2 LOAD_FAST                1 (a)
              4 CALL_FUNCTION            1
              6 POP_TOP

  4           8 LOAD_CONST               1 (2)
             10 STORE_FAST               1 (a)

  5          12 LOAD_FAST                1 (a)
             14 LOAD_FAST                0 (b)
             16 BINARY_ADD
             18 RETURN_VALUE
```
```python
---------------------------------------------------------------------------
UnboundLocalError                         Traceback (most recent call last)
&amp;lt;ipython-input-75-77e72c7f0d1d&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 outer(10)

&amp;lt;ipython-input-74-cdc13810ae66&amp;gt; in outer(a)
      5         return a + b
      6     dis.dis(inner)
----&amp;gt; 7     return inner(a)

&amp;lt;ipython-input-74-cdc13810ae66&amp;gt; in inner(b)
      1 def outer(a):
      2     def inner(b):
----&amp;gt; 3         print(a)
      4         a = 2
      5         return a + b

UnboundLocalError: local variable &amp;#39;a&amp;#39; referenced before assignment
```

&amp;gt; 변수 `a`를 찾을 때 수행하는 작업 :  `LOAD_FAST`

&amp;gt; 로컬에서 찾고있음.

&amp;gt; 아직 로컬에서 할당되기 전이라서, 에러

---
#### nonlocal을 사용하는 경우

```python
def outer(a):
    def inner(b):
        nonlocal a
        print(a)
        a = 2
        return a + b
    dis.dis(inner)
    c = inner(a)
    print(&amp;#39;print a&amp;#39;, a)
    return c
```
```python
outer(10)
```
```
  4           0 LOAD_GLOBAL              0 (print)
              2 LOAD_DEREF               0 (a)
              4 CALL_FUNCTION            1
              6 POP_TOP

  5           8 LOAD_CONST               1 (2)
             10 STORE_DEREF              0 (a)

  6          12 LOAD_DEREF               0 (a)
             14 LOAD_FAST                0 (b)
             16 BINARY_ADD
             18 RETURN_VALUE
10
print a 2
12
```
&amp;gt; print로 변수 `a`를 참조후에 변경시켰지만, 에러가 발생하지 않음.

&amp;gt; 그리고 외부함수안 변수 `a`가 변경된걸 확인할 수 있음

---
### nonlocal 과 global 비교

```python
g = 10

def outer(a):
    def outer2(b):
        def outer3(c):
            def inner(d):
                nonlocal a
                a = 123
                #global g
                #g = 12
            inner(c)
        outer3(b)
    outer2(a)
    return a
```
```python
outer(12)
=&amp;gt; 123
```

### 함수안에서 참조 후 할당한 경우

```python
def a():
    print(a)
    a = 3
```
```python
a() # NameError가 발생하지 않음
```
```python
---------------------------------------------------------------------------
UnboundLocalError                         Traceback (most recent call last)
&amp;lt;ipython-input-352-c29124115998&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 a() # NameError가 발생하지 않음

&amp;lt;ipython-input-351-3764ae051a13&amp;gt; in a()
      1 def a():
----&amp;gt; 2     print(a)
      3     a = 3

UnboundLocalError: local variable &amp;#39;a&amp;#39; referenced before assignment
```
```python
def a():
    print(b)
```
```python
# 할당하지 않는 변수를 참조하는 경우에는 NameError 발생

a()
```
```python
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
&amp;lt;ipython-input-358-389f78108c11&amp;gt; in &amp;lt;module&amp;gt;
      1 # 할당하지 않는 변수를 참조하는 경우에는 NameError 발생
      2 
----&amp;gt; 3 a()

&amp;lt;ipython-input-356-ae73a013f075&amp;gt; in a()
      1 def a():
----&amp;gt; 2     print(b)

NameError: name &amp;#39;b&amp;#39; is not defined
```
----


# 파이썬 함수 호출 방식

call by value? call by reference?


call by value일까?

```python
def spam(eggs):
    eggs.append(1)
    eggs = [2, 3]
    
ham = [0]

spam(ham)
```
```python
=&amp;gt; [2, 3] in func
   [0, 1] out func
```
```python
ham
=&amp;gt; [0, 1]
```
만약 call by value라면..

```python
from copy import deepcopy

def spam(eggs):
    eggs = deepcopy(eggs)
    eggs.append(1)
    eggs = [2, 3]
    
ham = [0]

spam(ham)
```
```python
ham
=&amp;gt; [0]
```
call by reference일까?

```python
def spam(eggs):
    eggs.append(1)
    eggs = [2, 3]

    
ham = [0]

spam(ham)   
```
```python
ham
=&amp;gt; [0, 1]
```
call by ref 라면..
```python
def spam(eggs):
    eggs.append(1)
    eggs[:] = [2, 3]

ham = [0]

spam(ham)
```
```python
ham
=&amp;gt; [2, 3]
```

## 파이썬 call by sharing (call by objects)

```python
def spam(eggs):
    print(&amp;#39;2 - &amp;#39;, id(eggs))
    eggs.append(1)
    print(&amp;#39;3 - &amp;#39;,id(eggs))
    eggs = [2, 3]
    print(&amp;#39;4 - &amp;#39;,id(eggs))

    
ham = [0]
print(&amp;#39;1 - &amp;#39;,id(ham))
spam(ham)
print(&amp;#39;5 - &amp;#39;,id(ham))
```
```python
=&amp;gt; 1 -  4367282952
   2 -  4367282952
   3 -  4367282952
   4 -  4365173256
   5 -  4367282952
```

### immutable 한 경우..
```python
def spam(eggs):
    eggs += &amp;#39;!!!&amp;#39; # &amp;#39;hi&amp;#39;.append(&amp;#39;!!!&amp;#39;) -- x
    # eggs = &amp;#39;hi&amp;#39; + &amp;#39;!!!&amp;#39; -- o
    print(eggs)

ham = &amp;#39;hi&amp;#39;
spam(ham)
```
```python
=&amp;gt; hi!!!
```
```python
print(ham)
=&amp;gt; hi
```
## mutable 한 경우

```python
def spam(eggs):
    eggs.append(3)
    print(eggs, &amp;#39;in func&amp;#39;)
    
ham = [1, 2]
spam(ham)
print(ham)
```
```python
=&amp;gt; [1, 2, 3] in func
   [1, 2, 3]
```


# 람다 함수

장점 : 메모리 절약, 간단한 문법
```python
import weakref


def function(x):
    x += 1
    return x


# function함수의 약한 참조를 생성.
# 객체에 대한 참조가 약한참조만 남은 경우에 gc(갈비지컬랙터)에 의해서 제거됨 (dead)
wkr_function = weakref.ref(function)
```
```python
wkr_function
=&amp;gt; &amp;lt;weakref at 0x104510188; to &amp;#39;function&amp;#39; at 0x10449e8c8 (function)&amp;gt;
```
```python
del function

# 제거됨
wkr_function
=&amp;gt; &amp;lt;weakref at 0x104510188; dead&amp;gt;
```
&amp;gt; 람다 함수를 사용하는 경우에는, 함수이름을 del 할 필요없이, 바로 제거

```python
wkr_lambda = weakref.ref(lambda x: x+ 1)
```
```python
wkr_lambda
=&amp;gt; &amp;lt;weakref at 0x1045107c8; dead&amp;gt;
```&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sonypark/75abd700e5799037f0d08e3f25a90c44.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_190120</title>
   <link href="http://localhost:4000/til/2019/01/20/TIL/"/>
   <updated>2019-01-20T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/20/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 중급 강의 두 번째 수업 정리 및 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gist.github.com/sonypark/75abd700e5799037f0d08e3f25a90c44&quot;&gt;gist.github.com&lt;/a&gt;에 업로드
    &lt;h4 id=&quot;함수의-정의-및-호출&quot;&gt;함수의 정의 및 호출&lt;/h4&gt;
    &lt;ul&gt;
      &lt;li&gt;함수 객체 이해하기&lt;/li&gt;
      &lt;li&gt;함수 네임스페이스 및 스코프&lt;/li&gt;
      &lt;li&gt;람다함수 이해하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;요새 주로 집에서 공부를 하고 있다. 아무래도 밖에서 공부하는 것보다 효율이 떨어진다. 내일부터는 다시 카페에 가서 공부해야겠다.&lt;/li&gt;
  &lt;li&gt;운동을 한 달 넘게 쉬었다. 공부를 할 때는 체력도 중요하다. 다시 운동을 시작하자. 장기전이다. 꾸준히 집중력있게 공부하기 위해서 운동은 병행해야 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190119</title>
   <link href="http://localhost:4000/til/2019/01/19/TIL/"/>
   <updated>2019-01-19T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/19/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 중급 강의 세 번째 수업
    &lt;ul&gt;
      &lt;li&gt;1급객체 함수&lt;/li&gt;
      &lt;li&gt;재귀호출&lt;/li&gt;
      &lt;li&gt;멀티플 디스패치 처리&lt;/li&gt;
      &lt;li&gt;함수형 처리 함수&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬을 공부할수록 결코 쉽지 않은 언어라는 걸 알게 된다. 언어의 모든 기능을 알 필요는 없지만 해당 언어의 라이브러리를 뜯어보고 수정해서 쓸 정도가 되려면 기본 원리와 기능들을 알아야한다.&lt;/li&gt;
  &lt;li&gt;이제까지 남들이 만들어 놓은 라이브러리를 가져다 쓸 줄만 알았지 내가 필요한 대로 수정할 생각은 못 한 것 같다. 앞으로 남이 만든 라이버리를 수정하거나 직접 라이브러리를 만들 일이 반드시 생길 것이다. 이왕 공부하는 거 제대로 배워놓자.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190118</title>
   <link href="http://localhost:4000/til/2019/01/18/TIL/"/>
   <updated>2019-01-18T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/18/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;공부가 재미있다. 영어 공부와 프로그래밍 공부 모두 억지로 하는 게 아니라 재밌어서 하는 공부이다.&lt;/li&gt;
  &lt;li&gt;앞으로도 꾸준히 지속하자. 꾸준히 하면 점점 더 성장할 것이라 믿는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190117</title>
   <link href="http://localhost:4000/til/2019/01/17/TIL/"/>
   <updated>2019-01-17T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/17/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 중급 강의 두 번째 수업
    &lt;h4 id=&quot;함수의-정의-및-호출&quot;&gt;함수의 정의 및 호출&lt;/h4&gt;
    &lt;ul&gt;
      &lt;li&gt;함수 객체 이해하기&lt;/li&gt;
      &lt;li&gt;함수 네임스페이스 및 스코프&lt;/li&gt;
      &lt;li&gt;람다함수 이해하기&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오늘은 수업들은 거 말고는 딱히 공부를 많이 하진 못 했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스 수업 복습&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190116</title>
   <link href="http://localhost:4000/til/2019/01/16/TIL/"/>
   <updated>2019-01-16T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/16/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 1 공부 (교재의 1/3)&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;오늘은 약속이 있어서 공부를 많이 하진 못 했다.&lt;/li&gt;
  &lt;li&gt;두 번째 파이썬 교재 공부를 시작했다. 오늘은 1/3 정도 공부했다.&lt;/li&gt;
  &lt;li&gt;내일은 나머지 1/3을 공부할 생각이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 2 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>패스트캠퍼스_파이썬중급_01</title>
   <link href="http://localhost:4000/python/2019/01/15/py-fastcampus01/"/>
   <updated>2019-01-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/python/2019/01/15/py-fastcampus01</id>
   <content type="html">&lt;noscript&gt;&lt;pre&gt;## break
- loop문 안을 빠져 나올 때 쓴다
- break는 loop문 안에서만 사용 가능하다
```python
while True:
    print(&amp;quot;while&amp;quot;)
    break
```
~~~
=&amp;gt; while   # while 한 번만 출력되고 loop문 끝남
~~~
```python
for i in range(100):
    print(&amp;#39;for&amp;#39;)
    break
```
```python
=&amp;gt; for     # for 한 번만 출력되고 loop문 끝남
```

## continue
- loop문 안에서 continue를 만나면 다시 loop문 처음으로 돌아간다.
- continue 밑에 코드는 실행되지 않는다.
```python
for i in range(2):
    print(&amp;#39;top&amp;#39;)
    continue
    # 이하 건너 뜀
    print(&amp;quot;bottom&amp;quot;)
```
```python
# top 두 번 출력
=&amp;gt; top
=&amp;gt; top
```

## else (if, while, for)
- 조건문에서 쓰인다.
- if문 뿐 아니라 while, for문에서도 쓰인다.
```python
# random.randint(a,b)
# =&amp;gt; Return a random integer N such that a &amp;lt;= N &amp;lt;= b.
while random.randint(0,1): # 0(False) 또는 1(True) 리턴
    print(&amp;#39;while&amp;#39;)
    # break # =&amp;gt; break가 있다면 여기서 loop문 종료된다.
else:
    print(&amp;#39;else&amp;#39;)
```

- **for문에서 else문은 iterator객체가 모두 소모된 이후에 실행된다**
```python
for i in range(3):
    print(&amp;#39;for&amp;#39;)
else:
    print(&amp;#39;else&amp;#39;)
```
```python
=&amp;gt; for # iterator 객체 3 소모
=&amp;gt; for
=&amp;gt; for
=&amp;gt; else # iterator 객체 소모 된 이후 실행
```

## else with try
- try문에서 else는 에러가 발생하지 않은 경우에만 실행된다.
```python
try:
    assert random.randint(0, 1)
    print(&amp;#39;try&amp;#39;)
except:
    # 만약 에러가 발생해서 예외처리되면, else구문으로 넘어가지 않고 
    # except구문에서 종료
    print(&amp;#39;except&amp;#39;)
else:
    print(&amp;#39;else&amp;#39;)
```
## finally
- 무조건 실행된다.
- 중간에 return이 있어도 finally는 실행된다.

```python
def a():
    try:
        assert random.randint(0, 1)
        print(&amp;#39;try&amp;#39;)
        return True
    except:
        print(&amp;#39;except&amp;#39;)
        return False
    else:
        print(&amp;#39;else&amp;#39;)
    finally:
        print(&amp;#39;finally&amp;#39;)
        # 에러가 발생했든, 하지 않았든 상관치 않고 실행된다.
        # 이전에 return으로 함수가 종료되어도 finally는 실행된다.
```

# 스페셜 메소드
- 파이썬 내에서 사용되는 프로토콜
- 객체에 특정 기능을 호출할 때 사용된다.

## 인스턴스 객체 생성
### instance = Class(1,2)

&amp;gt; **스페셜 메소드 호출 순서**
&amp;gt;1. `__call__`
&amp;gt;2. `__new__`
&amp;gt;3. `__init__`

## `__init__`
```python
class A:
    def __init__(self, a, b):
        # 인스턴스 생성 후 가장 먼저 실행되는 스페셜 메소드, 인스턴스 초기 설정
        print(&amp;quot;인스턴스 초기화&amp;quot;)
        self.a = a
        self.b = b

=&amp;gt; a = A(1, 2)
```
## `__new__`
- instance를 생성하는 생성자 역할
- class를 인자값으로 받아 instance를 만든다
- 오버라이딩 하는 경우 `object에 구현된 __new__`를 이용해서 instance를 만든다.


```python
class B:
    def __new__(cls): #self가 아닌 cls를 사용한다. 아직 인스턴스가 생성되지 않은 상태이기 때문에. class를 인자로 받는다.
        print(&amp;quot;인스턴스를 만듭니다.&amp;quot;)
        print(cls)
        # return 1 # 이라고 작성하면 B클래스를 호출하면 항상 1을 리턴한다.
        return super().__new__(cls)
```
```python
b = B()
```
```python
=&amp;gt; 인스턴스를 만듭니다.
=&amp;gt; &amp;lt;class &amp;#39;__main__.B&amp;#39;&amp;gt;
```

## `__call__`
```python
class C:
    def __call__(self, *args):
        print(&amp;quot;호출&amp;quot;)
```
```python
# 인스턴스를 호출할때 -&amp;gt; 즉 괄호`()`를 열고 닫을때 실행되는 메소드
c = C()
c()
```
```python
=&amp;gt; 호출
```

## 질문1
&amp;gt; - 위 `__new__`, `__call__` 예시에서
&amp;gt; - b = B()를 선언하면 `def __new__(cls)` 이 실행되는데
&amp;gt; - c = C()를 선언한 이후에 c()를 입력해야 `def __call__(self, *args)` 이 실행됩니다.
&amp;gt; - 그 이유가 무엇인가요?


~~~
클래스를 호출할때 실행되는 `__call__` 스페셜 메소드는 어디에 있을까?
=&amp;gt; 클래스를 만드는 메타클래스인 `type`클래스에 있는 `__call__`을 호출함
~~~
```python
type(C) # 클래스의 type 확인 / 즉 C class 객체를 생성한 클래스를 확인
```

```python
=&amp;gt;type
```

## 커스텀 메타 클레스 만들기
```python
class TypeClass(type):
    def __call__(cls, *args):
        print(&amp;#39;call&amp;#39;)
        instance = cls.__new__(cls)
        instance.__init__(*args)
        return instance
```



## 질문2
&amp;gt; - instance = `cls.__new__(cls)`
&amp;gt; - 이 부분의 의미를 잘 모르겠습니다.
&amp;gt; - TypeClass(type) 안에는 `__new__(cls)`라는 함수가 존재하지 않는데 어떻게 이렇게 선언할 수 있나요?
&amp;gt; - instance = `cls.__new__(cls)`
&amp;gt; - instance.`__init__(*args)`
&amp;gt; - 이 두 부분에 대해 설명 부탁드립니다.



## 커스텀 메타클래스 적용시키는 방법
- class A(metaclass=TypeClass): in v3

```python
class A(metaclass=TypeClass):
    def __new__(cls):
        print(&amp;#39;new&amp;#39;)
        return super().__new__(cls)
    
    def __init__(self, x, y, z):
        print(&amp;#39;init&amp;#39;)
        self.x = x
        self.y = y
        self.z = z
```


## 질문3
&amp;gt; - `return super().__new__(cls)`
&amp;gt; - 이 부분이 의미하는 바를 정확히 모르겠습니다.
&amp;gt; - 저 부분을 return함으로서 생기는 결과가 무엇인가요?


```python
instance = A(1, 2, 3)
```
```python
# 순서대로 호출
=&amp;gt; call
=&amp;gt; new
=&amp;gt; init
```



## 싱글턴
- 최초에 생성한 인스턴스만 리턴해주는 클래스
```python
class St:
    def __new__(cls):
        if not hasattr(cls, &amp;#39;instance&amp;#39;):
            cls.instance = super().__new__(cls)
        return cls.instance
```
```python
St() is St()
```
```python
=&amp;gt; True
```


## 질문4
&amp;gt; - 싱글턴
&amp;gt; - 싱글턴을 설명하는 위의 코드가 잘 이해되지 않습니다.
&amp;gt; - return에 `super().__new__(cls)` 로 쓸 때와의 차이점은 무엇인가요?
&amp;gt; - 싱글턴을 사용하는 상황과 예시는 어떤 게 있나요?


## with(context 관리)
~~~
with -&amp;gt; &amp;#39;__enter__&amp;#39;, &amp;#39;__exit__&amp;#39; 순으로 진행된다.
시작할 때 enter, 끝날 때 exit 가 실행된다. 

__enter__ : with구문 시작할때,
__exit__: with구문 (들여쓰기가) 끝날때

파일을 열 때 with을 쓰는 이유는 __exit__ 부분에서 f.close를 자동으로 해주기 때문이다.
~~~

```python
class Context:
    def __enter__(self):
        print(&amp;quot;__enter__&amp;quot;)
        return self
    
    def __exit__(self, *args):
        print(&amp;#39;exit&amp;#39;)
```
```python
c = Context()
```
```python
with c: # __enter__
    with c: # __enter__
        with c: # __enter__
            pass # __exit__
        pass # __exit__
    pass # __exit__

```
```python
=&amp;gt; __enter__
=&amp;gt; __enter__
=&amp;gt; __enter__
=&amp;gt; exit
=&amp;gt; exit
=&amp;gt; exit
```

```python
f = open(&amp;quot;./test.txt&amp;quot;, &amp;#39;w&amp;#39;)
hasattr(f, &amp;#39;__enter__&amp;#39;), hasattr(f, &amp;#39;__exit__&amp;#39;)
```
```python
=&amp;gt; (True, True)
```
```python
f.close()
f.closed 
```
```python
=&amp;gt; True
```
```python
c = Context()
with c:
    pass
--------------------
with Context() as c:
    pass
    
는 동일한 실행 방법이다
```

##### 파일래퍼객체에는 with구문안에서 사용될 수 있도록 스페셜 메소드가 구현되어 있다.
```python
f = open(&amp;quot;./test.txt&amp;quot;, &amp;#39;w&amp;#39;)
hasattr(f, &amp;#39;__enter__&amp;#39;), hasattr(f, &amp;#39;__exit__&amp;#39;)
```
```python
=&amp;gt; (True, True)
# __exit__메소드가 실행될 때, .close()메소드가 실행되서 파일io를 종료한다.
```

----

## `__exit__` 스페셜 메소드에 들어오는 인자는??

### `def __exit__(self, error_type, error, traceback):`

`error_type` : with구문 안에서 발생한 에러의 클래스

`error`: with구문 안에서 발생한 에러의 인스턴스

`traceback`: with구문 안에서 발생한 에러의 traceback

&amp;gt; traceback은 추후에 수업 예정



이러한 인자를 받기 때문에,     
with구문 안에서 에러가 발생한 경우에 대처할 수 있게 된다.


만약 에러가 발생하지 않으면 `None, None, None`이 들어온다


```python
class Context:
    def __enter__(self):
        print(&amp;quot;__enter__&amp;quot;)
        return self
    
    def __exit__(self, error_cls, error_instance, traceback):
        print(&amp;#39;exit&amp;#39;)
```

```python
c = Context()
```

```python
with c:
    raise IndexError(&amp;quot;인스턴스입니다.&amp;quot;)
```
```python
__enter__
exit
(&amp;lt;class &amp;#39;IndexError&amp;#39;&amp;gt;, IndexError(&amp;#39;인스턴스입니다.&amp;#39;), &amp;lt;traceback object at 0x1083c5dc8&amp;gt;)
---------------------------------------------------------------------------
IndexError                                Traceback (most recent call last)
&amp;lt;ipython-input-150-68d46299f410&amp;gt; in &amp;lt;module&amp;gt;
      1 with c:
----&amp;gt; 2     raise IndexError(&amp;quot;인스턴스입니다.&amp;quot;)

IndexError: 인스턴스입니다.
```

## with 활용 2

`python trick` 책에서 나온 예제.

참고주소 : https://realpython.com/
&amp;gt; 메일링 서비스 신청하면 좋습니다. 좋은 주제 많이 이야기하는 파이썬 블로그입니다. (현솔 강사님 추천)

```python
class Indenter:
    def __init__(self):
        self.level = 0
        
    def __enter__(self):
        self.level += 1
        return self
    
    def __exit__(self, *args):
        self.level -= 1
        
    def print(self, text):
        print(&amp;quot;    &amp;quot; * self.level + text)
```
```python
with Indenter() as indent:
    indent.print(&amp;quot;hi&amp;quot;)
    with indent:
        indent.print(&amp;quot;hello&amp;quot;)
        with indent:
            indent.print(&amp;#39;안녕하세요&amp;#39;)
        indent.print(&amp;#39;bye&amp;#39;)
    indent.print(&amp;quot;quit&amp;quot;)
```
~~~
    hi
        hello
            안녕하세요
        bye
    quit
~~~

# 자료구조(tuple, list, dict, set, str)
- 2 종류의 추상클래스로 묶어서 이해하기
- Container 와 Sequence(Container + 순서 정보)

## Container
- __contains__ 가 구현되어 있는 객체
- __contains__를 함수가 아닌 상수로 선언해도 Container로 인지한다.
~~~
class MC:
    def __contains__(self, value):
        return True
    
    # __contains__ = 1  # 메소드가 아닌 경우에도 Container객체라고 판단함.
~~~
```python
issubclass(MC, Container)
```
```python
=&amp;gt; True
```
## Container의 특징
#### in ( not in ) : 포함 여부
#### len : 길이
#### max,min : 최대값, 최소값

## Sequence
- container + 순서

## Sequence 특징
#### 더하기 연산 +

```
[1, 2, 3] + [4, 5, 6]
=&amp;gt; [1, 2, 3, 4, 5, 6]
```
#### 곱하기 연산 (* n)

```
[1, 2] * 10
=&amp;gt; [1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2]
```
#### indexing 색인

```
[1, 2, 3][0]
=&amp;gt; 1
```
#### slice

```
a = [1, 2, 3, 4]
a[1:3] #  == a[slice(1, 3)] 슬라이스객체로 인덱싱하는것이랑 동일
```

## super 클래스

```python
class Z:
    def a(self):
        print(&amp;quot;a in Z&amp;quot;, self)
        
class A(Z):
    def a(self):
        print(&amp;quot;a in A&amp;quot;, self)
        
        
class C:
    def a(self):
        print(&amp;quot;a in C&amp;quot;, self)
        
        
class B(A, C):
    def a(self):
        print(&amp;quot;a in B&amp;quot;, self)  

```

```python
B.mro()
```
```python
[__main__.B, __main__.A, __main__.Z, __main__.C, object]
```
```python
b = B()
b.a() # B.mro() 순서대로 메소드를 탐색해서 실행시킴
```

```python
=&amp;gt; a in B &amp;lt;__main__.B object at 0x108445c18&amp;gt;
```

## super(기준 클래스, 인스턴스)
- 기준 클래스는 무시 -&amp;gt; mro 기준 다음 클래스부터 탐색

```python
super(B, b).a()
```
```python
=&amp;gt; a in A &amp;lt;__main__.B object at 0x108420dd8&amp;gt;
```
```python
B.mro()
```
```python
==&amp;gt; [__main__.B, __main__.A, __main__.Z, __main__.C, object]
```
```python
super(B, b).a()
```
```python
==&amp;gt; a in A &amp;lt;__main__.B object at 0x108420dd8&amp;gt;
```
```python
super(A, b).a()
```
```python
==&amp;gt; a in Z &amp;lt;__main__.B object at 0x108420dd8&amp;gt;
```
```python
super(C, b).a()
```
```python
==&amp;gt; Error   #(C 뒤에는 Object 이기 때문)
```

```python
class B:
    def bm(self):
        print(&amp;#39;b in B&amp;#39;)
        
class A(B):
    def bm(self):
        print(&amp;#39;b in A&amp;#39;)
        
    def am(self):
        super().bm() # == super(A, self).bm() 작성한 것과 동일
        # 클래스 안에서 사용하면 자동으로, 속한 클래스와 인스턴스를 인자로 보냄
```

```python
instance = A()
instance.am()
```
```python
=&amp;gt; b in B
```
```python
A.am()
```
```python
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
&amp;lt;ipython-input-291-bb4ec2b72093&amp;gt; in &amp;lt;module&amp;gt;
----&amp;gt; 1 A.am()

TypeError: am() missing 1 required positional argument: &amp;#39;self&amp;#39;
```&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/sonypark/e11d1e247b7975c31a894b9981f8e506.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>TIL_190115</title>
   <link href="http://localhost:4000/til/2019/01/15/TIL/"/>
   <updated>2019-01-15T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/15/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬 교재 1독(복습) - 점프투파이썬&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;점프투파이썬을 다시 한 번 보았다. 다시 보니 또 새롭다.&lt;/li&gt;
  &lt;li&gt;이번주는 파이썬 교재를 하나 더 볼 생각이다. &lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; 이라는 책을 얼마전에 선물 받았는데 설명도 잘 돼 있고 공부하기 좋을 거 같다.&lt;/li&gt;
  &lt;li&gt;패스트캠퍼스에서 파이썬 강의도 듣고 교재와 생활코딩을 병행해서 공부하니 효율이 높은 것 같다.&lt;/li&gt;
  &lt;li&gt;이번주까지 파이썬에 집중하고 다음주 부터는 본격적으로 JS를 공부하려고 한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://dojang.io/course/view.php?id=7&quot;&gt;파이썬코딩도장&lt;/a&gt; part 1 공부&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190114</title>
   <link href="http://localhost:4000/til/2019/01/14/TIL/"/>
   <updated>2019-01-14T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/14/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 완강&lt;/li&gt;
  &lt;li&gt;깃헙 블로그 재설치&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt;를 완강했다. 예전에 필요해서 공부한 경험이 있었지만 이번 기회에 기초 지식을 좀 더 단단히 할 수 있었다. 수업을 들으며 그 동안 가졌더 의문이 많이 해결 되었다.&lt;/li&gt;
  &lt;li&gt;실수로 깃헙 블로그 데이터를 모두 날렸다. 블로그 수정을 하려다 git push를 잘 못 했고 그 걸 되돌리려다 완전히 다 날려버렸다. 그래서 처음부터 다시 깔았다.. 불행 중 다행인 건 그 동안 게시했던 포스팅(얼마 없지만..)은 따로 백업해두었다는 것이었다. 아직 git 명령어에 익숙지 않아 자칫 하면 데이터를 크게 날릴 위험이 있다. 앞으로는 git 공부도 열심히 해야겠다.&lt;/li&gt;
  &lt;li&gt;블로그 시작 초반이고 포스팅이 몇 개 없어서 망정이지 그렇지 않았다면 엄청난 멘붕에 휩싸였을 것 같다. 오늘 일을 교훈 삼아 앞으로 더 주의하자.&lt;/li&gt;
  &lt;li&gt;강제 푸시(git push –force)는 정말 위험하다..
    &lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;
  &lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;파이썬 교재 1독(복습) - 점프투파이썬&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190113</title>
   <link href="http://localhost:4000/til/2019/01/13/TIL/"/>
   <updated>2019-01-13T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/13/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 수강&lt;/li&gt;
  &lt;li&gt;영어공부 : 생활영어 표현 5개 암기 및 영어 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬을 제대로 공부한 적이 없어서 그런지 생활코딩, 패스트캠퍼스의 파이썬 강의를 통해 많이 배운다.&lt;/li&gt;
  &lt;li&gt;이전에는 딥러닝을 공부하면서 Scrapy 크롤링이나 CNN 모델을 테스트 하기 위해 그 때 그 때 필요한 부분만 찾아서 공부했다. 그래서 파이썬 언어의 기본 문법이나 구조를 제대로 알지 못하고 사용했다. (&lt;code class=&quot;highlighter-rouge&quot;&gt;__init__&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;self&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;yield&lt;/code&gt; 등)&lt;/li&gt;
  &lt;li&gt;파이썬을 처음부터 다시 공부하면서 객체 지향 프로그래밍에 대해서도 다시 한 번 되짚어 볼 수 있어 좋다.&lt;/li&gt;
  &lt;li&gt;오늘은 좀 게으름을 피웠다. 일요일이라 그런지 좀 쉬고 싶은 마음도 있었다. 내일부터는 다시 부지런히 공부해야겠다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;파이썬 교재 1독(복습) - 점프투파이썬&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190112</title>
   <link href="http://localhost:4000/til/2019/01/12/TIL/"/>
   <updated>2019-01-12T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/12/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 중급 강의 첫 수업 수강&lt;/li&gt;
  &lt;li&gt;수업 내용 복습 : &lt;a href=&quot;https://gist.github.com/sonypark/e11d1e247b7975c31a894b9981f8e506&quot;&gt;gist.github.com&lt;/a&gt;에 업로드&lt;/li&gt;
  &lt;li&gt;영어공부 : 생활영어 표현 5개 암기 및 영어 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;나는 그 동안 파이썬의 10%도 사용하지 못 하고 있었다.&lt;/li&gt;
  &lt;li&gt;수업 듣길 잘 했다.&lt;/li&gt;
  &lt;li&gt;markdown 문법에 조금씩 익숙해지고 있다. Github page 와 gist 를 시작하길 잘 한 것 같다.&lt;/li&gt;
  &lt;li&gt;앞으로 파이썬 강의 내용을 복습한 후 gist에 올리고 그 중에서 특히 도움이 되는 내용은 Github page에 올리자&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
  &lt;li&gt;파이썬 교재 1독(복습) - 점프투파이썬&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190111</title>
   <link href="http://localhost:4000/til/2019/01/11/TIL-02/"/>
   <updated>2019-01-11T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/11/TIL-02</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부 : 생활영어 표현 5개 암기 및 영어 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;주석을 달 때 규칙&lt;/strong&gt;
    &lt;blockquote&gt;
      &lt;ol&gt;
        &lt;li&gt;&lt;strong&gt;간결하면서 이해하기 쉽게 달 것&lt;/strong&gt;&lt;/li&gt;
        &lt;li&gt;&lt;strong&gt;주석을 달 필요 없는 코드를 작성할 것&lt;/strong&gt;&lt;/li&gt;
      &lt;/ol&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; - 코드만 보고도 이해 할 수 있게 작성하는 게 중요하다
 - 최고의 주석은 '주석이 필요 없는 코드'이다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;패스트캠퍼스 파이썬 강의 첫 수업&lt;/li&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL_190110</title>
   <link href="http://localhost:4000/til/2019/01/10/TIL/"/>
   <updated>2019-01-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/10/TIL</id>
   <content type="html">&lt;h1 id=&quot;오늘-한-일&quot;&gt;오늘 한 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyll&lt;/a&gt; 테마로 깃헙 블로그 론칭. 이거 만드는 데만 이틀을 꼬박 보냈다. 여러 테마를 적용해보며 10번 넘게 설치와 삭제를 반복했다.(예쁘고 맘에 드는 테마일 수록 설정이 복잡하다.. 결국 처음에 고른 가장 간단한 테마로 결정)
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://github.com/codinfox/codinfox-lanyon&quot;&gt;codinfox&lt;/a&gt; 탬플릿을 사용했다.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;템플릿과 TIL(Today I Learned) 작성 형식&lt;/strong&gt;은 &lt;a href=&quot;https://wayhome25.github.io/&quot;&gt;초보몽키&lt;/a&gt;님의 블로그를 참고했다.&lt;/li&gt;
      &lt;li&gt;TIL을 시작하기로 마음 먹은 것도 초보몽키님의 TIL을 보고 자극을 받았기 때문이다.&lt;/li&gt;
      &lt;li&gt;아직 템플릿과 포스팅이 익숙지 않아서 초보몽키님의 블로그를 참고하며 앞으로도 많이 도움을 받을 것 같다.&lt;/li&gt;
      &lt;li&gt;이곳도 언젠간 누군가에게 도움을 주는 블로그가 되었으면 좋겠다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부 : 생활영어 표현 5개 암기 및 영어 작문&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;느낀점&quot;&gt;느낀점&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;너무 조급해 하지 말자. 빨리 가려다 중요한 걸 놓친다.&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;공부할 게 많다 보니 조급해진다. 그러다 보니 기초적인 걸 건너뛰고 싶어질 때가 있다. 하지만 기초가 가장 중요하다. 구현에만 급급하지 말고 언어의 구성요소와 작동원리 등도 차근차근 공부하자.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;나무보다는 숲을 보자. 정말 중요한 것에 집중하자.&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;중심보다 주변적인 것에 시간을 너무 많이 썼다.
        &lt;ol&gt;
          &lt;li&gt;깃헙 블로그도 좀 더 멋진 테마를 사용 하고 싶어서 테마를 깔았다 지웠다만 10번을 넘게 했다. 지금 내게 중요한 건 디자인 보다는 내가 공부한 내용을 꾸준히 올리는 것이다.&lt;/li&gt;
          &lt;li&gt;파이썬과 루비를 Atom 에디터를 쓰면 한 번에 실습 가능한데 굳이 jetbrains IDE를 따로따로 설치했다. 앞으로 계속 쓸 IDE 이기 때문에 큰 잘못은 아니지만 지금 내게 필요한 작업을 하는데는 Atom으로 충분했다. 지금 중요한 게 무엇인지 먼저 생각하고 거기에 집중하도록 하자.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;개발자에게 영어란 가장 강력한 무기이다.&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;영어를 몰라도 개발을 할 수는 있지만 개발을 통해 더 빨리 더 많은 것을 하기 위해선 영어가 필수이다.&lt;/li&gt;
      &lt;li&gt;특히 공부를 하다 문제가 생겼을 때 해결해줄 수 있는 대부분의 컨텐츠는 영어로 되어있다. 실제로 개발 도중 오류가 나거나 궁금한 게 있을 때 한국어보다 영어 컨텐츠를 통해 해결한 경우가 많다.&lt;/li&gt;
      &lt;li&gt;영어 공부도 개발 공부 못지 않게 매일 꾸준히 해야한다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;내일-할-일&quot;&gt;내일 할 일&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;생활코딩 &lt;a href=&quot;https://opentutorials.org/course/1750&quot;&gt;Python&amp;amp;Ruby 강의&lt;/a&gt; 듣기&lt;/li&gt;
  &lt;li&gt;영어공부: 생활 영어 표현 5개 암기 및 작문&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>TIL (Today I learned) 시작</title>
   <link href="http://localhost:4000/til/2019/01/10/TIL-01/"/>
   <updated>2019-01-10T00:00:00+09:00</updated>
   <id>http://localhost:4000/til/2019/01/10/TIL-01</id>
   <content type="html">&lt;p&gt;오늘 하루 공부한 내용과 느낀점을 남기는 공간&lt;/p&gt;

</content>
 </entry>
 

</feed>
